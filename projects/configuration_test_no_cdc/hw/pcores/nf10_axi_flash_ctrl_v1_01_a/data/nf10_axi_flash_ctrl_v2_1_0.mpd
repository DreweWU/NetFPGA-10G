################################################################################
#
#  NetFPGA-10G http://www.netfpga.org
#
#  File:
#        nf10_axi_flash_ctrl_v2_1_0.mpd
#
#  Library:
#        N/A
#
#  Project:
#        configuration_test_no_cdc
#
#  Author:
#        Stephanie Friederich
#
#  Description:
#        Microprocessor Peripheral Description file
#
#  Copyright notice:
#        Copyright (C) 2010,2011 The Board of Trustees of The Leland Stanford
#                                Junior University
#
#  Licence:
#        This file is part of the NetFPGA 10G development base package.
#
#        This file is free code: you can redistribute it and/or modify it under
#        the terms of the GNU Lesser General Public License version 2.1 as
#        published by the Free Software Foundation.
#
#        This package is distributed in the hope that it will be useful, but
#        WITHOUT ANY WARRANTY; without even the implied warranty of
#        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#        Lesser General Public License for more details.
#
#        You should have received a copy of the GNU Lesser General Public
#        License along with the NetFPGA source package.  If not, see
#        http://www.gnu.org/licenses/.
#
#

BEGIN nf10_axi_flash_ctrl

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION DESC = AXI Flash controller
OPTION IP_GROUP = Memory and Memory Controller:MICROBLAZE
OPTION ARCH_SUPPORT_MAP = (virtex5lx=PRODUCTION, virtex5tx=PRODUCTION, spartan6t=PRE_PRODUCTION, spartan6=PRE_PRODUCTION, spartan6l=PRE_PRODUCTION, qspartan6t=PRE_PRODUCTION, qspartan6=PRE_PRODUCTION, aspartan6t=PRE_PRODUCTION, aspartan6=PRE_PRODUCTION, virtex6lx=PRE_PRODUCTION, virtex6sx=PRE_PRODUCTION, virtex6hx=PRE_PRODUCTION, virtex6cx=PRE_PRODUCTION, virtex6llx=PRE_PRODUCTION, virtex6lsx=PRE_PRODUCTION, qspartan6l=PRE_PRODUCTION, qvirtex6lx=PRE_PRODUCTION, qvirtex6sx=PRE_PRODUCTION, qvirtex6fx=PRE_PRODUCTION, qvirtex6tx=PRE_PRODUCTION)
OPTION RUN_NGCBUILD = FALSE
OPTION STYLE = HDL


## Bus Interfaces
BUS_INTERFACE BUS = S_AXI, BUS_STD = AXI, BUS_TYPE = SLAVE

## Generics for VHDL or Parameters for Verilog
PARAMETER C_FAMILY = virtex5, DT = STRING
PARAMETER C_S_AXI_ACLK_FREQ_HZ = 100000000, DT = INTEGER, BUS = S_AXI, IO_IS = clk_freq, CLK_PORT = S_AXI_ACLK, CLK_UNIT = HZ, ASSIGNMENT = REQUIRE
PARAMETER C_BASEADDR = 0xffffffff, DT = std_logic_vector(31 downto 0), PAIR = C_HIGHADDR, ADDRESS = BASE, BUS = S_AXI, MIN_SIZE = 0x1000, ASSIGNMENT = REQUIRE
PARAMETER C_HIGHADDR = 0x00000000, DT = std_logic_vector(31 downto 0), PAIR = C_BASEADDR, ADDRESS = HIGH, BUS = S_AXI, ASSIGNMENT = REQUIRE
PARAMETER C_S_AXI_ADDR_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_DATA_WIDTH = 32, DT = INTEGER, BUS = S_AXI, ASSIGNMENT = CONSTANT
PARAMETER C_S_AXI_PROTOCOL = AXI4LITE, DT = STRING, BUS = S_AXI, ASSIGNMENT = CONSTANT, TYPE = NON_HDL


## Ports
#PORT CPLD_CLK  = "", DIR = I, SIGIS = CLK, ASSIGNMENT = REQUIRE
PORT reboot = "", DIR = O

PORT S_AXI_ACLK = "", DIR = I, BUS = S_AXI, SIGIS = CLK, ASSIGNMENT = REQUIRE
#PORT S_AXI_ARESETN = "", DIR = I, ASSIGNMENT = REQUIRE
PORT S_AXI_ARESETN = ARESETN, DIR = I, BUS = S_AXI, SIGIS = RST, ASSIGNMENT = REQUIRE
PORT S_AXI_AWADDR = AWADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_AWVALID = AWVALID, DIR = I, BUS = S_AXI
PORT S_AXI_AWREADY = AWREADY, DIR = O, BUS = S_AXI
PORT S_AXI_WDATA = WDATA, DIR = I, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WSTRB = WSTRB, DIR = I, VEC = [((C_S_AXI_DATA_WIDTH/8)-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_WVALID = WVALID, DIR = I, BUS = S_AXI
PORT S_AXI_WREADY = WREADY, DIR = O, BUS = S_AXI
PORT S_AXI_BRESP = BRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_BVALID = BVALID, DIR = O, BUS = S_AXI
PORT S_AXI_BREADY = BREADY, DIR = I, BUS = S_AXI
PORT S_AXI_ARADDR = ARADDR, DIR = I, VEC = [(C_S_AXI_ADDR_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_ARVALID = ARVALID, DIR = I, BUS = S_AXI
PORT S_AXI_ARREADY = ARREADY, DIR = O, BUS = S_AXI
PORT S_AXI_RDATA = RDATA, DIR = O, VEC = [(C_S_AXI_DATA_WIDTH-1):0], ENDIAN = LITTLE, BUS = S_AXI
PORT S_AXI_RRESP = RRESP, DIR = O, VEC = [1:0], BUS = S_AXI
PORT S_AXI_RVALID = RVALID, DIR = O, BUS = S_AXI
PORT S_AXI_RREADY = RREADY, DIR = I, BUS = S_AXI


PORT FPGA_A = "", DIR = O, VEC = [23:0]
PORT FPGA_DQ_I = "", DIR = I, VEC = [15:0], ENDIAN = LITTLE
PORT FPGA_DQ_O = "", DIR = O, VEC = [15:0], ENDIAN = LITTLE
PORT FPGA_DQ_T = "", DIR = O, VEC = [15:0], ENDIAN = LITTLE
PORT FPGA_DQ = "", TRI_O = FPGA_DQ_O, TRI_T = FPGA_DQ_T, DIR = IO, VEC = [15:0], ENDIAN = LITTLE, TRI_I = FPGA_DQ_I, THREE_STATE = TRUE, ENABLE = MULTI
PORT FPGA_FOE = "", DIR = O
PORT FPGA_FWE = "", DIR = O
PORT FPGA_FCS = "", DIR = O
PORT FPGA_IOL9P = "", DIR = O
#PORT FLASH_RST = "", DIR = O


END
