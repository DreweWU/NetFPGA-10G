#////////////////////////////////////////////////////////////////////////
#//
#//  NetFPGA-10G http://www.netfpga.org
#//
#//  Module:
#//          nf10_axiw_netwave_l2switch.mpd
#//
#//  Description:
#//          Microprocessor Peripheral Description File
#//                 
#//  Revision history:
#//          2011/03/10 mblott: Initial check-in
#//
#////////////////////////////////////////////////////////////////////////

BEGIN nf10_axis_netwave_l2switch

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION HDL = MIXED
OPTION USAGE_LEVEL = BASE_USER
OPTION STYLE = HDL
OPTION IP_GROUP = Communication High-Speed:MICROBLAZE
OPTION DESC = NetFPGA-10G AXI4-Stream netwave layer 2 switch
OPTION LONG_DESC = NetFPGA-10G AXI4-Stream netwave IP Block- layer 2 switch

## Bus Interfaces
BUS_INTERFACE BUS = M_AXIS0, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = M_AXIS1, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = M_AXIS2, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = M_AXIS3, BUS_STD = AXIS, BUS_TYPE = INITIATOR
BUS_INTERFACE BUS = S_AXIS0, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S_AXIS1, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S_AXIS2, BUS_STD = AXIS, BUS_TYPE = TARGET
BUS_INTERFACE BUS = S_AXIS3, BUS_STD = AXIS, BUS_TYPE = TARGET

## Generics for VHDL or Parameters for Verilog
PARAMETER C_M_AXIS0_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = M_AXIS0
PARAMETER C_M_AXIS1_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = M_AXIS1
PARAMETER C_M_AXIS2_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = M_AXIS2
PARAMETER C_M_AXIS3_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = M_AXIS3
PARAMETER C_S_AXIS0_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = S_AXIS0
PARAMETER C_S_AXIS1_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = S_AXIS1
PARAMETER C_S_AXIS2_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = S_AXIS2
PARAMETER C_S_AXIS3_DATA_WIDTH = 64, DT = INTEGER, RANGE = (8,32,64,256), BUS = S_AXIS3

## Ports
PORT aclk = "", DIR = I, SIGIS = CLK, BUS = M_AXIS0:M_AXIS1:M_AXIS2:M_AXIS3:S_AXIS0:S_AXIS1:S_AXIS2:S_AXIS3
PORT aresetn = "", DIR = I, SIGIS = RST

PORT m_axis0_tdata = TDATA, DIR = O, VEC = [C_M_AXIS0_DATA_WIDTH-1:0], BUS = M_AXIS0, ENDIAN = LITTLE
PORT m_axis0_tstrb = TSTRB, DIR = O, VEC = [(C_M_AXIS0_DATA_WIDTH/8)-1:0], BUS = M_AXIS0, ENDIAN = LITTLE
PORT m_axis0_tvalid = TVALID, DIR = O, BUS = M_AXIS0
PORT m_axis0_tready = TREADY, DIR = I, BUS = M_AXIS0
PORT m_axis0_tlast = TLAST, DIR = O, BUS = M_AXIS0

PORT m_axis1_tdata = TDATA, DIR = O, VEC = [C_M_AXIS1_DATA_WIDTH-1:0], BUS = M_AXIS1, ENDIAN = LITTLE
PORT m_axis1_tstrb = TSTRB, DIR = O, VEC = [(C_M_AXIS1_DATA_WIDTH/8)-1:0], BUS = M_AXIS1, ENDIAN = LITTLE
PORT m_axis1_tvalid = TVALID, DIR = O, BUS = M_AXIS1
PORT m_axis1_tready = TREADY, DIR = I, BUS = M_AXIS1
PORT m_axis1_tlast = TLAST, DIR = O, BUS = M_AXIS1

PORT m_axis2_tdata = TDATA, DIR = O, VEC = [C_M_AXIS2_DATA_WIDTH-1:0], BUS = M_AXIS2, ENDIAN = LITTLE
PORT m_axis2_tstrb = TSTRB, DIR = O, VEC = [(C_M_AXIS2_DATA_WIDTH/8)-1:0], BUS = M_AXIS2, ENDIAN = LITTLE
PORT m_axis2_tvalid = TVALID, DIR = O, BUS = M_AXIS2
PORT m_axis2_tready = TREADY, DIR = I, BUS = M_AXIS2
PORT m_axis2_tlast = TLAST, DIR = O, BUS = M_AXIS2

PORT m_axis3_tdata = TDATA, DIR = O, VEC = [C_M_AXIS3_DATA_WIDTH-1:0], BUS = M_AXIS3, ENDIAN = LITTLE
PORT m_axis3_tstrb = TSTRB, DIR = O, VEC = [(C_M_AXIS3_DATA_WIDTH/8)-1:0], BUS = M_AXIS3, ENDIAN = LITTLE
PORT m_axis3_tvalid = TVALID, DIR = O, BUS = M_AXIS3
PORT m_axis3_tready = TREADY, DIR = I, BUS = M_AXIS3
PORT m_axis3_tlast = TLAST, DIR = O, BUS = M_AXIS3

PORT s_axis0_tdata = TDATA, DIR = I, VEC = [C_S_AXIS0_DATA_WIDTH-1:0], BUS = S_AXIS0, ENDIAN = LITTLE
PORT s_axis0_tstrb = TSTRB, DIR = I, VEC = [(C_S_AXIS0_DATA_WIDTH/8)-1:0], BUS = S_AXIS0, ENDIAN = LITTLE
PORT s_axis0_tvalid = TVALID, DIR = I, BUS = S_AXIS0
PORT s_axis0_tready = TREADY, DIR = O, BUS = S_AXIS0
PORT s_axis0_tlast = TLAST, DIR = I, BUS = S_AXIS0

PORT s_axis1_tdata = TDATA, DIR = I, VEC = [C_S_AXIS1_DATA_WIDTH-1:0], BUS = S_AXIS1, ENDIAN = LITTLE
PORT s_axis1_tstrb = TSTRB, DIR = I, VEC = [(C_S_AXIS1_DATA_WIDTH/8)-1:0], BUS = S_AXIS1, ENDIAN = LITTLE
PORT s_axis1_tvalid = TVALID, DIR = I, BUS = S_AXIS1
PORT s_axis1_tready = TREADY, DIR = O, BUS = S_AXIS1
PORT s_axis1_tlast = TLAST, DIR = I, BUS = S_AXIS1

PORT s_axis2_tdata = TDATA, DIR = I, VEC = [C_S_AXIS2_DATA_WIDTH-1:0], BUS = S_AXIS2, ENDIAN = LITTLE
PORT s_axis2_tstrb = TSTRB, DIR = I, VEC = [(C_S_AXIS2_DATA_WIDTH/8)-1:0], BUS = S_AXIS2, ENDIAN = LITTLE
PORT s_axis2_tvalid = TVALID, DIR = I, BUS = S_AXIS2
PORT s_axis2_tready = TREADY, DIR = O, BUS = S_AXIS2
PORT s_axis2_tlast = TLAST, DIR = I, BUS = S_AXIS2

PORT s_axis3_tdata = TDATA, DIR = I, VEC = [C_S_AXIS3_DATA_WIDTH-1:0], BUS = S_AXIS3, ENDIAN = LITTLE
PORT s_axis3_tstrb = TSTRB, DIR = I, VEC = [(C_S_AXIS3_DATA_WIDTH/8)-1:0], BUS = S_AXIS3, ENDIAN = LITTLE
PORT s_axis3_tvalid = TVALID, DIR = I, BUS = S_AXIS3
PORT s_axis3_tready = TREADY, DIR = O, BUS = S_AXIS3
PORT s_axis3_tlast = TLAST, DIR = I, BUS = S_AXIS3

END
