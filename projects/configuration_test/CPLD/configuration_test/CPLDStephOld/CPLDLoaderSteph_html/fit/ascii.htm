<html><body>
<pre>
 
cpldfit:  version O.40d                             Xilinx Inc.
                                  Fitter Report
Design Name: CPLDLoaderSteph                     Date:  6-28-2011,  5:11PM
Device Used: XC2C256-6-PQ208
Fitting Status: Successful

*************************  Mapped Resource Summary  **************************

Macrocells     Product Terms    Function Block   Registers      Pins           
Used/Tot       Used/Tot         Inps Used/Tot    Used/Tot       Used/Tot       
144/256 ( 56%) 372 /896  ( 42%) 262 /640  ( 41%) 99 /256 ( 39%) 117/173 ( 68%)

** Function Block Resources **

Function Mcells   FB Inps  Pterms   IO       CTC      CTR      CTS      CTE     
Block    Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot Used/Tot
FB1      16/16*    23/40    33/56     1/11    1/1*     0/1      0/1      0/1
FB2      12/16     28/40    55/56     0/10    1/1*     0/1      0/1      0/1
FB3       8/16     27/40    55/56     0/11    1/1*     0/1      0/1      0/1
FB4       8/16     37/40    56/56*    0/10    1/1*     0/1      0/1      0/1
FB5      16/16*    26/40    39/56     8/11    1/1*     0/1      0/1      0/1
FB6      14/16     21/40    32/56    10/11    1/1*     0/1      0/1      0/1
FB7      10/16     36/40    27/56     9/10    1/1*     0/1      0/1      0/1
FB8       4/16      4/40     3/56     4/12    1/1*     0/1      0/1      0/1
FB9      12/16     22/40    21/56    12/12*   0/1      0/1      0/1      1/1*
FB10      4/16      6/40     5/56     4/12    0/1      0/1      0/1      1/1*
FB11      0/16      0/40     0/56     0/ 9    0/1      0/1      0/1      0/1
FB12      1/16      2/40     2/56     0/11    1/1*     0/1      0/1      0/1
FB13     11/16      0/40     0/56    11/11*   0/1      0/1      0/1      0/1
FB14      9/16      7/40    10/56     9/ 9*   1/1*     0/1      0/1      1/1*
FB15     11/16     14/40    24/56    11/11*   1/1*     0/1      0/1      1/1*
FB16      8/16      9/40    10/56     7/12    1/1*     0/1      0/1      1/1*
         -----    -------  -------   -----    ---      ---      ---      ---
Total   144/256   262/640  372/896   86/173  12/16     0/16     0/16     5/16

CTC - Control Term Clock
CTR - Control Term Reset
CTS - Control Term Set
CTE - Control Term Output Enable

* - Resource is exhausted

** Global Control Resources **

GCK         GSR         GTS         DGE         
Used/Tot    Used/Tot    Used/Tot    Used/Tot    
1/3         0/1         0/4         0/1

Signal 'CPLD_100MHZ' mapped onto global clock net GCK2.

** Pin Resources **

Signal Type    Required     Mapped  |  Pin Type            Used    Total 
------------------------------------|------------------------------------
Input         :   30          30    |  I/O              :   114    163
Output        :   54          54    |  GCK/IO           :     1      3
Bidirectional :   32          32    |  GTS/IO           :     0      4
GCK           :    1           1    |  GSR/IO           :     0      1
GTS           :    0           0    |  CDR/IO           :     1      1
GSR           :    0           0    |  DGE/IO           :     1      1
                 ----        ----
        Total    117         117

End of Mapped Resource Summary
**************************  Errors and Warnings  ***************************

WARNING:Cpld - Unable to retrieve the path to the iSE Project Repository. Will
   use the default filename of 'CPLDLoaderSteph.ise'.
WARNING:Cpld:936 - The output buffer 'FLASH_B_W_OBUF' is missing an input and
   will be deleted.
WARNING:Cpld:936 - The output buffer 'FLASH_B_WP_OBUF' is missing an input and
   will be deleted.
WARNING:Cpld:936 - The output buffer 'FLASH_B_RP_OBUF' is missing an input and
   will be deleted.
WARNING:Cpld:936 - The output buffer 'FLASH_B_L_OBUF' is missing an input and
   will be deleted.
WARNING:Cpld:936 - The output buffer 'FLASH_B_K_OBUF' is missing an input and
   will be deleted.
WARNING:Cpld:936 - The output buffer 'FLASH_B_G_OBUF' is missing an input and
   will be deleted.
WARNING:Cpld:936 - The output buffer 'FLASH_B_E_OBUF' is missing an input and
   will be deleted.
WARNING:Cpld:1007 - Removing unused input(s) 'FLASH_B_RW'.  The input(s) are
   unused after optimization. Please verify functionality via simulation.
WARNING:Cpld:1007 - Removing unused input(s) 'FPGA_RP'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld:1007 - Removing unused input(s) 'reboot'.  The input(s) are unused
   after optimization. Please verify functionality via simulation.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
WARNING:Cpld - Clock 'CPLD_100MHZ' is used in an OFFSET timespec, this clock
   should be explicitly declared as a global clock input (BUFG) in your design
   in order for the OFFSET timespec to be properly analyzed. This software may
   attempt to place this signal on a pin that can drive a BUFG if it does not
   already have a pin assigned, however if the LOC constraint is not specified
   by the user then the OFFSET timespec will not be applied. OFFSET constraints
   on clocks that do not drive a BUFG will be ignored. In this case a FROM:TO
   constraint should be used instead.
*************************  Summary of Mapped Logic  ************************

** 86 Outputs **

Signal                   Total Total Bank Loc     Pin   Pin       Pin     I/O      I/O       Slew Reg     Reg Init
Name                     Pts   Inps               No.   Type      Use     STD      Style     Rate Use     State
FLASH_A_A<23>            0     0     2    FB1_1   2     I/O       O       LVCMOS33           FAST         
FLASH_A_A<7>             3     3     1    FB5_1   49    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<6>             3     3     1    FB5_2   48    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<5>             3     3     1    FB5_3   47    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<4>             3     3     1    FB5_5   45    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<3>             3     3     1    FB5_12  43    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<2>             3     3     1    FB5_13  41    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<1>             3     3     1    FB5_14  40    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<0>             3     3     1    FB5_15  39    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<8>             3     3     1    FB6_1   50    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<9>             3     3     1    FB6_2   51    CDR/I/O   O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<10>            3     3     1    FB6_3   54    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<11>            3     3     1    FB6_5   56    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<12>            3     3     1    FB6_6   57    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<13>            3     3     1    FB6_12  58    DGE/I/O   O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<14>            3     3     1    FB6_13  60    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<15>            3     3     1    FB6_14  61    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<16>            3     3     1    FB6_15  62    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<17>            3     3     1    FB6_16  63    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_RP               0     0     1    FB7_1   37    I/O       O       LVCMOS33           FAST         
FLASH_A_K                2     3     1    FB7_2   36    I/O       O       LVCMOS33           FAST         
FLASH_A_G                2     3     1    FB7_3   35    I/O       O       LVCMOS33           FAST DFF     RESET
FLASH_A_E                2     3     1    FB7_4   34    I/O       O       LVCMOS33           FAST DFF     RESET
FLASH_A_A<22>            3     3     1    FB7_6   31    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<21>            3     3     1    FB7_11  30    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<20>            3     3     1    FB7_12  29    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<19>            3     3     1    FB7_13  28    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_A<18>            3     3     1    FB7_14  27    I/O       O       LVCMOS33           FAST DEFF    RESET
FLASH_A_WP               0     0     1    FB8_1   64    I/O       O       LVCMOS33           FAST         
FLASH_A_W                2     3     1    FB8_2   65    I/O       O       LVCMOS33           FAST DFF     RESET
FLASH_A_L                2     3     1    FB8_3   66    I/O       O       LVCMOS33           FAST DFF     RESET
FLASH_A_RW               0     0     1    FB8_4   67    I/O       O       LVCMOS33           FAST         
FPGA_data<0>             3     4     2    FB9_1   160   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<1>             3     4     2    FB9_2   161   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<2>             3     4     2    FB9_3   162   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<3>             3     4     2    FB9_4   163   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<4>             3     4     2    FB9_5   164   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<5>             3     4     2    FB9_6   165   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<6>             3     4     2    FB9_11  166   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<7>             3     4     2    FB9_12  167   I/O       I/O     LVCMOS33 KPR       FAST         

Signal                   Total Total Bank Loc     Pin   Pin       Pin     I/O      I/O       Slew Reg     Reg Init
Name                     Pts   Inps               No.   Type      Use     STD      Style     Rate Use     State
FPGA_data<8>             2     3     2    FB9_13  168   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<9>             2     3     2    FB9_14  169   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<10>            2     3     2    FB9_15  170   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<11>            2     3     2    FB9_16  171   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<15>            2     3     2    FB10_13 149   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<14>            2     3     2    FB10_14 148   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<13>            2     3     2    FB10_15 147   I/O       I/O     LVCMOS33 KPR       FAST         
FPGA_data<12>            2     3     2    FB10_16 146   I/O       I/O     LVCMOS33 KPR       FAST         
FLASH_B_DQ<0>            0     0     1    FB13_1  107   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<1>            0     0     1    FB13_2  108   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<2>            0     0     1    FB13_3  109   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<3>            0     0     1    FB13_4  110   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<4>            0     0     1    FB13_5  111   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<5>            0     0     1    FB13_6  112   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<6>            0     0     1    FB13_12 113   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<7>            0     0     1    FB13_13 114   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<8>            0     0     1    FB13_14 115   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<9>            0     0     1    FB13_15 116   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<10>           0     0     1    FB13_16 117   I/O       O       LVCMOS33           FAST         
FLASH_A_DQ<3>            4     4     1    FB14_1  106   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<2>            4     4     1    FB14_2  103   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<1>            4     4     1    FB14_3  102   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<0>            4     4     1    FB14_4  101   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_B_DQ<15>           0     0     1    FB14_5  100   I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<14>           0     0     1    FB14_12 99    I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<13>           0     0     1    FB14_13 97    I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<12>           0     0     1    FB14_14 95    I/O       O       LVCMOS33           FAST         
FLASH_B_DQ<11>           0     0     1    FB14_16 91    I/O       O       LVCMOS33           FAST         
FLASH_A_DQ<4>            4     4     1    FB15_1  118   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<5>            4     4     1    FB15_2  119   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<6>            4     4     1    FB15_3  120   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<7>            4     4     1    FB15_4  121   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<8>            4     4     1    FB15_5  122   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<9>            4     4     1    FB15_6  123   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<10>           4     4     1    FB15_11 125   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<11>           4     4     1    FB15_12 126   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<12>           4     4     1    FB15_13 127   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<13>           4     4     1    FB15_14 128   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FLASH_A_DQ<14>           4     4     1    FB15_16 131   I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET
FPGA_CCLK                2     3     1    FB16_3  88    I/O       O       LVCMOS33           FAST         

Signal                   Total Total Bank Loc     Pin   Pin       Pin     I/O      I/O       Slew Reg     Reg Init
Name                     Pts   Inps               No.   Type      Use     STD      Style     Rate Use     State
FPGA_clock               2     3     1    FB16_5  86    I/O       O       LVCMOS33           FAST         
LEDs<0>                  1     1     1    FB16_12 83    I/O       O       LVCMOS33           FAST         
LEDs<1>                  1     1     1    FB16_13 82    I/O       O       LVCMOS33           FAST         
LEDs<2>                  0     0     1    FB16_14 80    I/O       O       LVCMOS33           FAST         
LEDs<3>                  1     1     1    FB16_15 78    I/O       O       LVCMOS33           FAST         
FLASH_A_DQ<15>           4     4     1    FB16_16 77    I/O       I/O     LVCMOS33 KPR       FAST DEFF    RESET

** 58 Buried Nodes **

Signal                   Total Total Loc     Reg     Reg Init
Name                     Pts   Inps          Use     State
FLASH_A_DQ_buffered<3>   4     6     FB1_2   DFF     RESET
FPGAData<4>              4     7     FB1_3   DFF     RESET
FLASH_A_DQ_buffered<11>  4     6     FB1_4   DFF     RESET
FLASH_A_DQ_buffered<2>   4     6     FB1_5   DFF     RESET
FPGAData<5>              4     7     FB1_6   DFF     RESET
AlternateCycle           3     4     FB1_7   DFF     RESET
N_PZ_761                 2     3     FB1_8           
N_PZ_680                 1     2     FB1_9           
clk_cnt_i<1>             1     1     FB1_10  TFF     RESET
clk_cnt_i<0>             0     0     FB1_11  TFF     RESET
FLASH_A_DQ_buffered<10>  4     6     FB1_12  DFF     RESET
FLASH_A_DQ_buffered<8>   4     6     FB1_13  DFF     RESET
FPGAData<7>              4     7     FB1_14  DFF     RESET
FLASH_A_DQ_buffered<0>   4     6     FB1_15  DFF     RESET
FLASH_AK                 3     4     FB1_16  DEFF    RESET
pause<4>                 8     27    FB2_5   DFF     RESET
pause<18>                8     27    FB2_6   TFF     RESET
pause<21>                5     27    FB2_7   TFF     RESET
pause<1>                 5     27    FB2_8   DFF     RESET
pause<22>                4     27    FB2_9   TFF     RESET
pause<0>                 4     27    FB2_10  DFF     RESET
pause<23>                3     27    FB2_11  TFF     RESET
pause<3>                 7     27    FB2_12  DFF     RESET
pause<19>                7     27    FB2_13  TFF     RESET
pause<2>                 6     27    FB2_14  DFF     RESET
pause<20>                6     27    FB2_15  TFF     RESET
DelayedPause             3     28    FB2_16  DFF     RESET
pause<17>                9     27    FB3_7   TFF     RESET
pause<8>                 12    27    FB3_8   TFF     RESET
pause<9>                 13    27    FB3_9   TFF     RESET
pause<10>                14    27    FB3_10  TFF     RESET
pause<11>                15    27    FB3_11  TFF     RESET
pause<6>                 10    27    FB3_14  DFF     RESET
pause<16>                10    27    FB3_15  TFF     RESET
pause<5>                 9     27    FB3_16  DFF     RESET
FLASH_A_DQ_buffered<12>  4     6     FB4_7   DFF     RESET
ConfProceed              4     6     FB4_8   DFF     RESET
pause<14>                12    27    FB4_9   TFF     RESET
pause<7>                 11    27    FB4_10  DFF     RESET
pause<15>                11    27    FB4_11  TFF     RESET

Signal                   Total Total Loc     Reg     Reg Init
Name                     Pts   Inps          Use     State
FLASH_A_DQ_buffered<4>   4     6     FB4_14  DFF     RESET
pause<12>                14    27    FB4_15  TFF     RESET
FPGAData<3>              4     7     FB4_16  DFF     RESET
FPGAData<0>              4     7     FB5_4   DFF     RESET
FLASH_A_DQ_buffered<15>  4     6     FB5_6   DFF     RESET
FPGAData<1>              4     7     FB5_7   DFF     RESET
FLASH_A_DQ_buffered<14>  4     6     FB5_8   DFF     RESET
FLASH_A_DQ_buffered<5>   4     6     FB5_9   DFF     RESET
FPGAData<2>              4     7     FB5_10  DFF     RESET
FLASH_A_DQ_buffered<13>  4     6     FB5_11  DFF     RESET
FLASH_A_DQ_buffered<6>   4     6     FB5_16  DFF     RESET
FLASH_A_DQ_buffered<7>   4     6     FB6_8   DFF     RESET
FLASH_A_DQ_buffered<9>   4     6     FB6_9   DFF     RESET
FPGAData<6>              4     7     FB6_10  DFF     RESET
FLASH_A_DQ_buffered<1>   4     6     FB6_11  DFF     RESET
pause<13>                13    27    FB7_16  TFF     RESET
Flash_A_G_buffered       2     2     FB12_3  DEFF    RESET
PrevInit_B               2     2     FB16_2  DEFF    RESET

** 63 Inputs **

Signal                   Bank Loc     Pin   Pin       Pin     I/O      I/O
Name                                  No.   Type      Use     STD      Style
CPLD_100MHZ              1    FB6_4   55~   GCK/I/O   GCK/I   LVCMOS33 KPR
FPGA_data<0>             2    FB9_1   160   I/O       I/O     LVCMOS33 KPR
FPGA_data<1>             2    FB9_2   161   I/O       I/O     LVCMOS33 KPR
FPGA_data<2>             2    FB9_3   162   I/O       I/O     LVCMOS33 KPR
FPGA_data<3>             2    FB9_4   163   I/O       I/O     LVCMOS33 KPR
FPGA_data<4>             2    FB9_5   164   I/O       I/O     LVCMOS33 KPR
FPGA_data<5>             2    FB9_6   165   I/O       I/O     LVCMOS33 KPR
FPGA_data<6>             2    FB9_11  166   I/O       I/O     LVCMOS33 KPR
FPGA_data<7>             2    FB9_12  167   I/O       I/O     LVCMOS33 KPR
FPGA_data<8>             2    FB9_13  168   I/O       I/O     LVCMOS33 KPR
FPGA_data<9>             2    FB9_14  169   I/O       I/O     LVCMOS33 KPR
FPGA_data<10>            2    FB9_15  170   I/O       I/O     LVCMOS33 KPR
FPGA_data<11>            2    FB9_16  171   I/O       I/O     LVCMOS33 KPR
FPGA_A<7>                2    FB10_1  159   I/O       I       LVCMOS33 KPR
FPGA_A<6>                2    FB10_2  158   I/O       I       LVCMOS33 KPR
FPGA_A<5>                2    FB10_3  155   I/O       I       LVCMOS33 KPR
FPGA_A<4>                2    FB10_4  154   I/O       I       LVCMOS33 KPR
FPGA_A<3>                2    FB10_5  153   I/O       I       LVCMOS33 KPR
FPGA_A<2>                2    FB10_6  152   I/O       I       LVCMOS33 KPR
FPGA_A<1>                2    FB10_11 151   I/O       I       LVCMOS33 KPR
FPGA_A<0>                2    FB10_12 150   I/O       I       LVCMOS33 KPR
FPGA_data<15>            2    FB10_13 149   I/O       I/O     LVCMOS33 KPR
FPGA_data<14>            2    FB10_14 148   I/O       I/O     LVCMOS33 KPR
FPGA_data<13>            2    FB10_15 147   I/O       I/O     LVCMOS33 KPR
FPGA_data<12>            2    FB10_16 146   I/O       I/O     LVCMOS33 KPR
FPGA_A<8>                2    FB11_2  173   I/O       I       LVCMOS33 KPR
FPGA_A<9>                2    FB11_3  174   I/O       I       LVCMOS33 KPR
FPGA_A<10>               2    FB11_4  175   I/O       I       LVCMOS33 KPR
FPGA_A<11>               2    FB11_11 178   I/O       I       LVCMOS33 KPR
FPGA_A<12>               2    FB11_12 179   I/O       I       LVCMOS33 KPR
FPGA_A<13>               2    FB11_13 180   I/O       I       LVCMOS33 KPR
FPGA_A<14>               2    FB11_14 182   I/O       I       LVCMOS33 KPR
FPGA_A<15>               2    FB11_15 183   I/O       I       LVCMOS33 KPR
FPGA_A<16>               2    FB11_16 184   I/O       I       LVCMOS33 KPR
FPGA_L                   2    FB12_1  145~  I/O       I       LVCMOS33 KPR
FPGA_E                   2    FB12_2  144~  I/O       I       LVCMOS33 KPR
FPGA_G                   2    FB12_3  143~  I/O       I       LVCMOS33 KPR
FPGA_W                   2    FB12_4  142~  I/O       I       LVCMOS33 KPR
FPGA_A<22>               2    FB12_6  139   I/O       I       LVCMOS33 KPR
FPGA_A<21>               2    FB12_11 138   I/O       I       LVCMOS33 KPR

Signal                   Bank Loc     Pin   Pin       Pin     I/O      I/O
Name                                  No.   Type      Use     STD      Style
FPGA_A<20>               2    FB12_12 137   I/O       I       LVCMOS33 KPR
FPGA_A<19>               2    FB12_13 136   I/O       I       LVCMOS33 KPR
FPGA_A<18>               2    FB12_14 135   I/O       I       LVCMOS33 KPR
FPGA_A<17>               2    FB12_15 134   I/O       I       LVCMOS33 KPR
FLASH_A_DQ<3>            1    FB14_1  106   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<2>            1    FB14_2  103   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<1>            1    FB14_3  102   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<0>            1    FB14_4  101   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<4>            1    FB15_1  118   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<5>            1    FB15_2  119   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<6>            1    FB15_3  120   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<7>            1    FB15_4  121   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<8>            1    FB15_5  122   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<9>            1    FB15_6  123   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<10>           1    FB15_11 125   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<11>           1    FB15_12 126   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<12>           1    FB15_13 127   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<13>           1    FB15_14 128   I/O       I/O     LVCMOS33 KPR
FLASH_A_DQ<14>           1    FB15_16 131   I/O       I/O     LVCMOS33 KPR
Program_B                1    FB16_1  90    I/O       I       LVCMOS33 KPR
INIT_B                   1    FB16_2  89    I/O       I       LVCMOS33 KPR
DONE                     1    FB16_4  87~   I/O       I       LVCMOS33 KPR
FLASH_A_DQ<15>           1    FB16_16 77    I/O       I/O     LVCMOS33 KPR

Legend:
Pin No.   - ~     - User Assigned
I/O Style - OD    - OpenDrain
          - PU    - Pullup
          - KPR   - Keeper
          - S     - SchmittTrigger
          - DG    - DataGate
Reg Use   - LATCH - Transparent latch
          - DFF   - D-flip-flop
          - DEFF  - D-flip-flop with clock enable
          - TFF   - T-flip-flop
          - TDFF  - Dual-edge-triggered T-flip-flop
          - DDFF  - Dual-edge-triggered flip-flop
          - DDEFF - Dual-edge-triggered flip-flop with clock enable
          /S (after any above flop/latch type) indicates initial state is Set
**************************  Function Block Details  ************************
Legend:
Total Pt     - Total product terms used by the macrocell signal
Loc          - Location where logic was mapped in device
Pin Type/Use - I  - Input             GCK - Global clock
               O  - Output            GTS - Global Output Enable
              (b) - Buried macrocell  GSR - Global Set/Reset
              VRF - Vref
Pin No.      - ~  - User Assigned
*********************************** FB1  ***********************************
This function block is part of I/O Bank number:               2
Number of function block inputs used/remaining:               23/17
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   33/23
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
FLASH_A_A<23>                 0     FB1_1   2    I/O     O                 
FLASH_A_DQ_buffered<3>        4     FB1_2   208  I/O     (b)    +          
FPGAData<4>                   4     FB1_3   206  GSR/I/O (b)    +          
FLASH_A_DQ_buffered<11>       4     FB1_4   205  I/O     (b)    +          
FLASH_A_DQ_buffered<2>        4     FB1_5   203  I/O     (b)    +          
FPGAData<5>                   4     FB1_6   202  I/O     (b)    +          
AlternateCycle                3     FB1_7        (b)     (b)    +          
N_PZ_761                      2     FB1_8        (b)     (b)               
N_PZ_680                      1     FB1_9        (b)     (b)               
clk_cnt_i<1>                  1     FB1_10       (b)     (b)               
clk_cnt_i<0>                  0     FB1_11       (b)     (b)               
FLASH_A_DQ_buffered<10>       4     FB1_12  201  I/O     (b)    +          
FLASH_A_DQ_buffered<8>        4     FB1_13  200  I/O     (b)    +          
FPGAData<7>                   4     FB1_14  199  I/O     (b)    +          
FLASH_A_DQ_buffered<0>        4     FB1_15  198  I/O     (b)    +          
FLASH_AK                      3     FB1_16  197  I/O     (b)    +          

Signals Used by Logic in Function Block
  1: AlternateCycle       9: FLASH_A_DQ<3>.PIN        17: FPGAData<4> 
  2: CPLD_100MHZ         10: FLASH_A_DQ<8>.PIN        18: FPGAData<5> 
  3: DONE                11: FLASH_A_DQ_buffered<0>   19: FPGAData<7> 
  4: DelayedPause        12: FLASH_A_DQ_buffered<10>  20: Flash_A_G_buffered 
  5: FLASH_A_DQ<0>.PIN   13: FLASH_A_DQ_buffered<11>  21: N_PZ_761 
  6: FLASH_A_DQ<10>.PIN  14: FLASH_A_DQ_buffered<2>   22: clk_cnt_i<0> 
  7: FLASH_A_DQ<11>.PIN  15: FLASH_A_DQ_buffered<3>   23: clk_cnt_i<1> 
  8: FLASH_A_DQ<2>.PIN   16: FLASH_A_DQ_buffered<8>  

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FLASH_A_A<23>     ........................................ 0       
FLASH_A_DQ_buffered<3> 
                  X.XX....X.....X.....X................... 6       
FPGAData<4>       X.XX........X.X.X...X................... 7       
FLASH_A_DQ_buffered<11> 
                  X.XX..X.....X.......X................... 6       
FLASH_A_DQ_buffered<2> 
                  X.XX...X.....X......X................... 6       
FPGAData<5>       X.XX.......X.X...X..X................... 7       
AlternateCycle    X.XX................X................... 4       
N_PZ_761          .XX...................X................. 3       
N_PZ_680          ..X................X.................... 2       
clk_cnt_i<1>      .....................X.................. 1       
clk_cnt_i<0>      ........................................ 0       
FLASH_A_DQ_buffered<10> 
                  X.XX.X.....X........X................... 6       
FLASH_A_DQ_buffered<8> 
                  X.XX.....X.....X....X................... 6       
FPGAData<7>       X.XX......X....X..X.X................... 7       
FLASH_A_DQ_buffered<0> 
                  X.XXX.....X.........X................... 6       
FLASH_AK          X.XX................X................... 4       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB2  ***********************************
This function block is part of I/O Bank number:               2
Number of function block inputs used/remaining:               28/12
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   55/1
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
(unused)                      0     FB2_1   3    GTS/I/O       
(unused)                      0     FB2_2   4    I/O           
(unused)                      0     FB2_3   5    GTS/I/O       
(unused)                      0     FB2_4   6    I/O           
pause<4>                      8     FB2_5   7    GTS/I/O (b)    +          
pause<18>                     8     FB2_6   8    I/O     (b)    +          
pause<21>                     5     FB2_7        (b)     (b)    +          
pause<1>                      5     FB2_8        (b)     (b)    +          
pause<22>                     4     FB2_9        (b)     (b)    +          
pause<0>                      4     FB2_10       (b)     (b)    +          
pause<23>                     3     FB2_11       (b)     (b)    +          
pause<3>                      7     FB2_12  9    GTS/I/O (b)    +          
pause<19>                     7     FB2_13  10   I/O     (b)    +          
pause<2>                      6     FB2_14  12   I/O     (b)    +          
pause<20>                     6     FB2_15  14   I/O     (b)    +          
DelayedPause                  3     FB2_16       (b)     (b)    +          

Signals Used by Logic in Function Block
  1: ConfProceed       11: pause<15>         20: pause<23> 
  2: DONE              12: pause<16>         21: pause<2> 
  3: DelayedPause      13: pause<17>         22: pause<3> 
  4: N_PZ_761          14: pause<18>         23: pause<4> 
  5: pause<0>          15: pause<19>         24: pause<5> 
  6: pause<10>         16: pause<1>          25: pause<6> 
  7: pause<11>         17: pause<20>         26: pause<7> 
  8: pause<12>         18: pause<21>         27: pause<8> 
  9: pause<13>         19: pause<22>         28: pause<9> 
 10: pause<14>        

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
pause<4>          XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
pause<18>         XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
pause<21>         XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
pause<1>          XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
pause<22>         XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
pause<0>          XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
pause<23>         XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
pause<3>          XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
pause<19>         XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
pause<2>          XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
pause<20>         XX.XXXXXXXXXXXXXXXXXXXXXXXXX............ 27      
DelayedPause      XXXXXXXXXXXXXXXXXXXXXXXXXXXX............ 28      
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB3  ***********************************
This function block is part of I/O Bank number:               2
Number of function block inputs used/remaining:               27/13
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   55/1
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
(unused)                      0     FB3_1   196  I/O           
(unused)                      0     FB3_2   195  I/O           
(unused)                      0     FB3_3   194  I/O           
(unused)                      0     FB3_4   193  I/O           
(unused)                      0     FB3_5   192  I/O           
(unused)                      0     FB3_6   191  I/O           
pause<17>                     9     FB3_7        (b)     (b)    +          
pause<8>                      12    FB3_8        (b)     (b)    +          
pause<9>                      13    FB3_9        (b)     (b)    +          
pause<10>                     14    FB3_10       (b)     (b)    +          
pause<11>                     15    FB3_11       (b)     (b)    +          
(unused)                      0     FB3_12  189  I/O           
(unused)                      0     FB3_13  188  I/O           
pause<6>                      10    FB3_14  187  I/O     (b)    +          
pause<16>                     10    FB3_15  186  I/O     (b)    +          
pause<5>                      9     FB3_16  185  I/O     (b)    +          

Signals Used by Logic in Function Block
  1: ConfProceed       10: pause<15>         19: pause<23> 
  2: DONE              11: pause<16>         20: pause<2> 
  3: N_PZ_761          12: pause<17>         21: pause<3> 
  4: pause<0>          13: pause<18>         22: pause<4> 
  5: pause<10>         14: pause<19>         23: pause<5> 
  6: pause<11>         15: pause<1>          24: pause<6> 
  7: pause<12>         16: pause<20>         25: pause<7> 
  8: pause<13>         17: pause<21>         26: pause<8> 
  9: pause<14>         18: pause<22>         27: pause<9> 

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
pause<17>         XXXXXXXXXXXXXXXXXXXXXXXXXXX............. 27      
pause<8>          XXXXXXXXXXXXXXXXXXXXXXXXXXX............. 27      
pause<9>          XXXXXXXXXXXXXXXXXXXXXXXXXXX............. 27      
pause<10>         XXXXXXXXXXXXXXXXXXXXXXXXXXX............. 27      
pause<11>         XXXXXXXXXXXXXXXXXXXXXXXXXXX............. 27      
pause<6>          XXXXXXXXXXXXXXXXXXXXXXXXXXX............. 27      
pause<16>         XXXXXXXXXXXXXXXXXXXXXXXXXXX............. 27      
pause<5>          XXXXXXXXXXXXXXXXXXXXXXXXXXX............. 27      
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB4  ***********************************
This function block is part of I/O Bank number:               2
Number of function block inputs used/remaining:               37/3
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   56/0
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
(unused)                      0     FB4_1   15   I/O           
(unused)                      0     FB4_2   16   I/O           
(unused)                      0     FB4_3   17   I/O           
(unused)                      0     FB4_4   18   I/O           
(unused)                      0     FB4_5   19   I/O           
(unused)                      0     FB4_6   20   I/O           
FLASH_A_DQ_buffered<12>       4     FB4_7        (b)     (b)    +          
ConfProceed                   4     FB4_8        (b)     (b)    +          
pause<14>                     12    FB4_9        (b)     (b)    +          
pause<7>                      11    FB4_10       (b)     (b)    +          
pause<15>                     11    FB4_11       (b)     (b)    +          
(unused)                      0     FB4_12  21   I/O           
(unused)                      0     FB4_13  22   I/O           
FLASH_A_DQ_buffered<4>        4     FB4_14  23   I/O     (b)    +          
pause<12>                     14    FB4_15       (b)     (b)    +          
FPGAData<3>                   4     FB4_16  25   I/O     (b)    +          

Signals Used by Logic in Function Block
  1: AlternateCycle           14: pause<0>          26: pause<20> 
  2: ConfProceed              15: pause<10>         27: pause<21> 
  3: DONE                     16: pause<11>         28: pause<22> 
  4: DelayedPause             17: pause<12>         29: pause<23> 
  5: FLASH_A_DQ<12>.PIN       18: pause<13>         30: pause<2> 
  6: FLASH_A_DQ<4>.PIN        19: pause<14>         31: pause<3> 
  7: FLASH_A_DQ_buffered<12>  20: pause<15>         32: pause<4> 
  8: FLASH_A_DQ_buffered<4>   21: pause<16>         33: pause<5> 
  9: FPGAData<3>              22: pause<17>         34: pause<6> 
 10: INIT_B                   23: pause<18>         35: pause<7> 
 11: N_PZ_761                 24: pause<19>         36: pause<8> 
 12: PrevInit_B               25: pause<1>          37: pause<9> 
 13: Program_B               

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FLASH_A_DQ_buffered<12> 
                  X.XXX.X...X............................. 6       
ConfProceed       .XX......XXXX........................... 6       
pause<14>         .XX.......X..XXXXXXXXXXXXXXXXXXXXXXXX... 27      
pause<7>          .XX.......X..XXXXXXXXXXXXXXXXXXXXXXXX... 27      
pause<15>         .XX.......X..XXXXXXXXXXXXXXXXXXXXXXXX... 27      
FLASH_A_DQ_buffered<4> 
                  X.XX.X.X..X............................. 6       
pause<12>         .XX.......X..XXXXXXXXXXXXXXXXXXXXXXXX... 27      
FPGAData<3>       X.XX..XXX.X............................. 7       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB5  ***********************************
This function block is part of I/O Bank number:               1
Number of function block inputs used/remaining:               26/14
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   39/17
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
FLASH_A_A<7>                  3     FB5_1   49   I/O     O      +          
FLASH_A_A<6>                  3     FB5_2   48   I/O     O      +          
FLASH_A_A<5>                  3     FB5_3   47   I/O     O      +          
FPGAData<0>                   4     FB5_4   46   GCK/I/O (b)    +          
FLASH_A_A<4>                  3     FB5_5   45   I/O     O      +          
FLASH_A_DQ_buffered<15>       4     FB5_6   44   GCK/I/O (b)    +          
FPGAData<1>                   4     FB5_7        (b)     (b)    +          
FLASH_A_DQ_buffered<14>       4     FB5_8        (b)     (b)    +          
FLASH_A_DQ_buffered<5>        4     FB5_9        (b)     (b)    +          
FPGAData<2>                   4     FB5_10       (b)     (b)    +          
FLASH_A_DQ_buffered<13>       4     FB5_11       (b)     (b)    +          
FLASH_A_A<3>                  3     FB5_12  43   I/O     O      +          
FLASH_A_A<2>                  3     FB5_13  41   I/O     O      +          
FLASH_A_A<1>                  3     FB5_14  40   I/O     O      +          
FLASH_A_A<0>                  3     FB5_15  39   I/O     O      +          
FLASH_A_DQ_buffered<6>        4     FB5_16  38   I/O     (b)    +          

Signals Used by Logic in Function Block
  1: AlternateCycle           10: FLASH_A_DQ_buffered<14>  19: FPGA_A<1> 
  2: DONE                     11: FLASH_A_DQ_buffered<15>  20: FPGA_A<2> 
  3: DelayedPause             12: FLASH_A_DQ_buffered<5>   21: FPGA_A<3> 
  4: FLASH_A_DQ<13>.PIN       13: FLASH_A_DQ_buffered<6>   22: FPGA_A<4> 
  5: FLASH_A_DQ<14>.PIN       14: FLASH_A_DQ_buffered<7>   23: FPGA_A<5> 
  6: FLASH_A_DQ<15>.PIN       15: FPGAData<0>              24: FPGA_A<6> 
  7: FLASH_A_DQ<5>.PIN        16: FPGAData<1>              25: FPGA_A<7> 
  8: FLASH_A_DQ<6>.PIN        17: FPGAData<2>              26: N_PZ_761 
  9: FLASH_A_DQ_buffered<13>  18: FPGA_A<0>               

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FLASH_A_A<7>      .X......................XX.............. 3       
FLASH_A_A<6>      .X.....................X.X.............. 3       
FLASH_A_A<5>      .X....................X..X.............. 3       
FPGAData<0>       XXX.......X..XX..........X.............. 7       
FLASH_A_A<4>      .X...................X...X.............. 3       
FLASH_A_DQ_buffered<15> 
                  XXX..X....X..............X.............. 6       
FPGAData<1>       XXX......X..X..X.........X.............. 7       
FLASH_A_DQ_buffered<14> 
                  XXX.X....X...............X.............. 6       
FLASH_A_DQ_buffered<5> 
                  XXX...X....X.............X.............. 6       
FPGAData<2>       XXX.....X..X....X........X.............. 7       
FLASH_A_DQ_buffered<13> 
                  XXXX....X................X.............. 6       
FLASH_A_A<3>      .X..................X....X.............. 3       
FLASH_A_A<2>      .X.................X.....X.............. 3       
FLASH_A_A<1>      .X................X......X.............. 3       
FLASH_A_A<0>      .X...............X.......X.............. 3       
FLASH_A_DQ_buffered<6> 
                  XXX....X....X............X.............. 6       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB6  ***********************************
This function block is part of I/O Bank number:               1
Number of function block inputs used/remaining:               21/19
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   32/24
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
FLASH_A_A<8>                  3     FB6_1   50   I/O     O      +          
FLASH_A_A<9>                  3     FB6_2   51   CDR/I/O O      +          
FLASH_A_A<10>                 3     FB6_3   54   I/O     O      +          
(unused)                      0     FB6_4   55   GCK/I/O GCK/I 
FLASH_A_A<11>                 3     FB6_5   56   I/O     O      +          
FLASH_A_A<12>                 3     FB6_6   57   I/O     O      +          
(unused)                      0     FB6_7        (b)           
FLASH_A_DQ_buffered<7>        4     FB6_8        (b)     (b)    +          
FLASH_A_DQ_buffered<9>        4     FB6_9        (b)     (b)    +          
FPGAData<6>                   4     FB6_10       (b)     (b)    +          
FLASH_A_DQ_buffered<1>        4     FB6_11       (b)     (b)    +          
FLASH_A_A<13>                 3     FB6_12  58   DGE/I/O O      +          
FLASH_A_A<14>                 3     FB6_13  60   I/O     O      +          
FLASH_A_A<15>                 3     FB6_14  61   I/O     O      +          
FLASH_A_A<16>                 3     FB6_15  62   I/O     O      +          
FLASH_A_A<17>                 3     FB6_16  63   I/O     O      +          

Signals Used by Logic in Function Block
  1: AlternateCycle           8: FLASH_A_DQ_buffered<7>  15: FPGA_A<14> 
  2: DONE                     9: FLASH_A_DQ_buffered<9>  16: FPGA_A<15> 
  3: DelayedPause            10: FPGAData<6>             17: FPGA_A<16> 
  4: FLASH_A_DQ<1>.PIN       11: FPGA_A<10>              18: FPGA_A<17> 
  5: FLASH_A_DQ<7>.PIN       12: FPGA_A<11>              19: FPGA_A<8> 
  6: FLASH_A_DQ<9>.PIN       13: FPGA_A<12>              20: FPGA_A<9> 
  7: FLASH_A_DQ_buffered<1>  14: FPGA_A<13>              21: N_PZ_761 

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FLASH_A_A<8>      .X................X.X................... 3       
FLASH_A_A<9>      .X.................XX................... 3       
FLASH_A_A<10>     .X........X.........X................... 3       
FLASH_A_A<11>     .X.........X........X................... 3       
FLASH_A_A<12>     .X..........X.......X................... 3       
FLASH_A_DQ_buffered<7> 
                  XXX.X..X............X................... 6       
FLASH_A_DQ_buffered<9> 
                  XXX..X..X...........X................... 6       
FPGAData<6>       XXX...X.XX..........X................... 7       
FLASH_A_DQ_buffered<1> 
                  XXXX..X.............X................... 6       
FLASH_A_A<13>     .X...........X......X................... 3       
FLASH_A_A<14>     .X............X.....X................... 3       
FLASH_A_A<15>     .X.............X....X................... 3       
FLASH_A_A<16>     .X..............X...X................... 3       
FLASH_A_A<17>     .X...............X..X................... 3       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB7  ***********************************
This function block is part of I/O Bank number:               1
Number of function block inputs used/remaining:               36/4
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   27/29
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
FLASH_A_RP                    0     FB7_1   37   I/O     O                 
FLASH_A_K                     2     FB7_2   36   I/O     O                 
FLASH_A_G                     2     FB7_3   35   I/O     O      +          
FLASH_A_E                     2     FB7_4   34   I/O     O      +          
(unused)                      0     FB7_5   32   I/O           
FLASH_A_A<22>                 3     FB7_6   31   I/O     O      +          
(unused)                      0     FB7_7        (b)           
(unused)                      0     FB7_8        (b)           
(unused)                      0     FB7_9        (b)           
(unused)                      0     FB7_10       (b)           
FLASH_A_A<21>                 3     FB7_11  30   I/O     O      +          
FLASH_A_A<20>                 3     FB7_12  29   I/O     O      +          
FLASH_A_A<19>                 3     FB7_13  28   I/O     O      +          
FLASH_A_A<18>                 3     FB7_14  27   I/O     O      +          
(unused)                      0     FB7_15       (b)           
pause<13>                     13    FB7_16       (b)     (b)    +          

Signals Used by Logic in Function Block
  1: ConfProceed       13: pause<0>          25: pause<20> 
  2: DONE              14: pause<10>         26: pause<21> 
  3: FLASH_AK          15: pause<11>         27: pause<22> 
  4: FPGA_A<18>        16: pause<12>         28: pause<23> 
  5: FPGA_A<19>        17: pause<13>         29: pause<2> 
  6: FPGA_A<20>        18: pause<14>         30: pause<3> 
  7: FPGA_A<21>        19: pause<15>         31: pause<4> 
  8: FPGA_A<22>        20: pause<16>         32: pause<5> 
  9: FPGA_E            21: pause<17>         33: pause<6> 
 10: FPGA_G            22: pause<18>         34: pause<7> 
 11: N_PZ_761          23: pause<19>         35: pause<8> 
 12: clk_cnt_i<1>      24: pause<1>          36: pause<9> 

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FLASH_A_RP        ........................................ 0       
FLASH_A_K         .XX........X............................ 3       
FLASH_A_G         .X.......XX............................. 3       
FLASH_A_E         .X......X.X............................. 3       
FLASH_A_A<22>     .X.....X..X............................. 3       
FLASH_A_A<21>     .X....X...X............................. 3       
FLASH_A_A<20>     .X...X....X............................. 3       
FLASH_A_A<19>     .X..X.....X............................. 3       
FLASH_A_A<18>     .X.X......X............................. 3       
pause<13>         XX........X.XXXXXXXXXXXXXXXXXXXXXXXX.... 27      
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB8  ***********************************
This function block is part of I/O Bank number:               1
Number of function block inputs used/remaining:               4/36
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   3/53
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
FLASH_A_WP                    0     FB8_1   64   I/O     O                 
FLASH_A_W                     2     FB8_2   65   I/O     O      +          
FLASH_A_L                     2     FB8_3   66   I/O     O      +          
FLASH_A_RW                    0     FB8_4   67   I/O     O                 
(unused)                      0     FB8_5   69   I/O           
(unused)                      0     FB8_6   70   I/O           
(unused)                      0     FB8_7        (b)           
(unused)                      0     FB8_8        (b)           
(unused)                      0     FB8_9        (b)           
(unused)                      0     FB8_10       (b)           
(unused)                      0     FB8_11  71   I/O           
(unused)                      0     FB8_12  72   I/O           
(unused)                      0     FB8_13  73   I/O           
(unused)                      0     FB8_14  74   I/O           
(unused)                      0     FB8_15  75   I/O           
(unused)                      0     FB8_16  76   I/O           

Signals Used by Logic in Function Block
  1: DONE               3: FPGA_W             4: N_PZ_761 
  2: FPGA_L           

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FLASH_A_WP        ........................................ 0       
FLASH_A_W         X.XX.................................... 3       
FLASH_A_L         XX.X.................................... 3       
FLASH_A_RW        ........................................ 0       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB9  ***********************************
This function block is part of I/O Bank number:               2
Number of function block inputs used/remaining:               22/18
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   21/35
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
FPGA_data<0>                  3     FB9_1   160  I/O     I/O                +  
FPGA_data<1>                  3     FB9_2   161  I/O     I/O                +  
FPGA_data<2>                  3     FB9_3   162  I/O     I/O                +  
FPGA_data<3>                  3     FB9_4   163  I/O     I/O                +  
FPGA_data<4>                  3     FB9_5   164  I/O     I/O                +  
FPGA_data<5>                  3     FB9_6   165  I/O     I/O                +  
(unused)                      0     FB9_7        (b)           
(unused)                      0     FB9_8        (b)           
(unused)                      0     FB9_9        (b)           
(unused)                      0     FB9_10       (b)           
FPGA_data<6>                  3     FB9_11  166  I/O     I/O                +  
FPGA_data<7>                  3     FB9_12  167  I/O     I/O                +  
FPGA_data<8>                  2     FB9_13  168  I/O     I/O                +  
FPGA_data<9>                  2     FB9_14  169  I/O     I/O                +  
FPGA_data<10>                 2     FB9_15  170  I/O     I/O                +  
FPGA_data<11>                 2     FB9_16  171  I/O     I/O                +  

Signals Used by Logic in Function Block
  1: DONE                      9: FLASH_A_DQ_buffered<5>  16: FPGAData<2> 
  2: FLASH_A_DQ_buffered<0>   10: FLASH_A_DQ_buffered<6>  17: FPGAData<3> 
  3: FLASH_A_DQ_buffered<10>  11: FLASH_A_DQ_buffered<7>  18: FPGAData<4> 
  4: FLASH_A_DQ_buffered<11>  12: FLASH_A_DQ_buffered<8>  19: FPGAData<5> 
  5: FLASH_A_DQ_buffered<1>   13: FLASH_A_DQ_buffered<9>  20: FPGAData<6> 
  6: FLASH_A_DQ_buffered<2>   14: FPGAData<0>             21: FPGAData<7> 
  7: FLASH_A_DQ_buffered<3>   15: FPGAData<1>             22: N_PZ_680 
  8: FLASH_A_DQ_buffered<4>  

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FPGA_data<0>      XX...........X.......X.................. 4       
FPGA_data<1>      X...X.........X......X.................. 4       
FPGA_data<2>      X....X.........X.....X.................. 4       
FPGA_data<3>      X.....X.........X....X.................. 4       
FPGA_data<4>      X......X.........X...X.................. 4       
FPGA_data<5>      X.......X.........X..X.................. 4       
FPGA_data<6>      X........X.........X.X.................. 4       
FPGA_data<7>      X.........X.........XX.................. 4       
FPGA_data<8>      X..........X.........X.................. 3       
FPGA_data<9>      X...........X........X.................. 3       
FPGA_data<10>     X.X..................X.................. 3       
FPGA_data<11>     X..X.................X.................. 3       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB10 ***********************************
This function block is part of I/O Bank number:               2
Number of function block inputs used/remaining:               6/34
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   5/51
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
(unused)                      0     FB10_1  159  I/O     I     
(unused)                      0     FB10_2  158  I/O     I     
(unused)                      0     FB10_3  155  I/O     I     
(unused)                      0     FB10_4  154  I/O     I     
(unused)                      0     FB10_5  153  I/O     I     
(unused)                      0     FB10_6  152  I/O     I     
(unused)                      0     FB10_7       (b)           
(unused)                      0     FB10_8       (b)           
(unused)                      0     FB10_9       (b)           
(unused)                      0     FB10_10      (b)           
(unused)                      0     FB10_11 151  I/O     I     
(unused)                      0     FB10_12 150  I/O     I     
FPGA_data<15>                 2     FB10_13 149  I/O     I/O                +  
FPGA_data<14>                 2     FB10_14 148  I/O     I/O                +  
FPGA_data<13>                 2     FB10_15 147  I/O     I/O                +  
FPGA_data<12>                 2     FB10_16 146  I/O     I/O                +  

Signals Used by Logic in Function Block
  1: DONE                      3: FLASH_A_DQ_buffered<13>   5: FLASH_A_DQ_buffered<15> 
  2: FLASH_A_DQ_buffered<12>   4: FLASH_A_DQ_buffered<14>   6: N_PZ_680 

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FPGA_data<15>     X...XX.................................. 3       
FPGA_data<14>     X..X.X.................................. 3       
FPGA_data<13>     X.X..X.................................. 3       
FPGA_data<12>     XX...X.................................. 3       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB11 ***********************************
This function block is part of I/O Bank number:               2
Number of function block inputs used/remaining:               0/40
Number of function block control terms used/remaining:        0/4
Number of PLA product terms used/remaining:                   0/56
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
(unused)                      0     FB11_1       (b)           
(unused)                      0     FB11_2  173  I/O     I     
(unused)                      0     FB11_3  174  I/O     I     
(unused)                      0     FB11_4  175  I/O     I     
(unused)                      0     FB11_5       (b)           
(unused)                      0     FB11_6       (b)           
(unused)                      0     FB11_7       (b)           
(unused)                      0     FB11_8       (b)           
(unused)                      0     FB11_9       (b)           
(unused)                      0     FB11_10      (b)           
(unused)                      0     FB11_11 178  I/O     I     
(unused)                      0     FB11_12 179  I/O     I     
(unused)                      0     FB11_13 180  I/O     I     
(unused)                      0     FB11_14 182  I/O     I     
(unused)                      0     FB11_15 183  I/O     I     
(unused)                      0     FB11_16 184  I/O     I     
*********************************** FB12 ***********************************
This function block is part of I/O Bank number:               2
Number of function block inputs used/remaining:               2/38
Number of function block control terms used/remaining:        1/3
Number of PLA product terms used/remaining:                   2/54
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
(unused)                      0     FB12_1  145  I/O     I     
(unused)                      0     FB12_2  144  I/O     I     
Flash_A_G_buffered            2     FB12_3  143  I/O     I      +          
(unused)                      0     FB12_4  142  I/O     I     
(unused)                      0     FB12_5  140  I/O           
(unused)                      0     FB12_6  139  I/O     I     
(unused)                      0     FB12_7       (b)           
(unused)                      0     FB12_8       (b)           
(unused)                      0     FB12_9       (b)           
(unused)                      0     FB12_10      (b)           
(unused)                      0     FB12_11 138  I/O     I     
(unused)                      0     FB12_12 137  I/O     I     
(unused)                      0     FB12_13 136  I/O     I     
(unused)                      0     FB12_14 135  I/O     I     
(unused)                      0     FB12_15 134  I/O     I     
(unused)                      0     FB12_16      (b)           

Signals Used by Logic in Function Block
  1: DONE               2: N_PZ_761         

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB13 ***********************************
This function block is part of I/O Bank number:               1
Number of function block inputs used/remaining:               0/40
Number of function block control terms used/remaining:        0/4
Number of PLA product terms used/remaining:                   0/56
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
FLASH_B_DQ<0>                 0     FB13_1  107  I/O     O                 
FLASH_B_DQ<1>                 0     FB13_2  108  I/O     O                 
FLASH_B_DQ<2>                 0     FB13_3  109  I/O     O                 
FLASH_B_DQ<3>                 0     FB13_4  110  I/O     O                 
FLASH_B_DQ<4>                 0     FB13_5  111  I/O     O                 
FLASH_B_DQ<5>                 0     FB13_6  112  I/O     O                 
(unused)                      0     FB13_7       (b)           
(unused)                      0     FB13_8       (b)           
(unused)                      0     FB13_9       (b)           
(unused)                      0     FB13_10      (b)           
(unused)                      0     FB13_11      (b)           
FLASH_B_DQ<6>                 0     FB13_12 113  I/O     O                 
FLASH_B_DQ<7>                 0     FB13_13 114  I/O     O                 
FLASH_B_DQ<8>                 0     FB13_14 115  I/O     O                 
FLASH_B_DQ<9>                 0     FB13_15 116  I/O     O                 
FLASH_B_DQ<10>                0     FB13_16 117  I/O     O                 

Signals Used by Logic in Function Block

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FLASH_B_DQ<0>     ........................................ 0       
FLASH_B_DQ<1>     ........................................ 0       
FLASH_B_DQ<2>     ........................................ 0       
FLASH_B_DQ<3>     ........................................ 0       
FLASH_B_DQ<4>     ........................................ 0       
FLASH_B_DQ<5>     ........................................ 0       
FLASH_B_DQ<6>     ........................................ 0       
FLASH_B_DQ<7>     ........................................ 0       
FLASH_B_DQ<8>     ........................................ 0       
FLASH_B_DQ<9>     ........................................ 0       
FLASH_B_DQ<10>    ........................................ 0       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB14 ***********************************
This function block is part of I/O Bank number:               1
Number of function block inputs used/remaining:               7/33
Number of function block control terms used/remaining:        2/2
Number of PLA product terms used/remaining:                   10/46
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
FLASH_A_DQ<3>                 4     FB14_1  106  I/O     I/O    +           +  
FLASH_A_DQ<2>                 4     FB14_2  103  I/O     I/O    +           +  
FLASH_A_DQ<1>                 4     FB14_3  102  I/O     I/O    +           +  
FLASH_A_DQ<0>                 4     FB14_4  101  I/O     I/O    +           +  
FLASH_B_DQ<15>                0     FB14_5  100  I/O     O                 
(unused)                      0     FB14_6       (b)           
(unused)                      0     FB14_7       (b)           
(unused)                      0     FB14_8       (b)           
(unused)                      0     FB14_9       (b)           
(unused)                      0     FB14_10      (b)           
(unused)                      0     FB14_11      (b)           
FLASH_B_DQ<14>                0     FB14_12 99   I/O     O                 
FLASH_B_DQ<13>                0     FB14_13 97   I/O     O                 
FLASH_B_DQ<12>                0     FB14_14 95   I/O     O                 
(unused)                      0     FB14_15      (b)           
FLASH_B_DQ<11>                0     FB14_16 91   I/O     O                 

Signals Used by Logic in Function Block
  1: DONE               4: FPGA_data<2>.PIN   6: Flash_A_G_buffered 
  2: FPGA_data<0>.PIN   5: FPGA_data<3>.PIN   7: N_PZ_761 
  3: FPGA_data<1>.PIN 

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FLASH_A_DQ<3>     X...XXX................................. 4       
FLASH_A_DQ<2>     X..X.XX................................. 4       
FLASH_A_DQ<1>     X.X..XX................................. 4       
FLASH_A_DQ<0>     XX...XX................................. 4       
FLASH_B_DQ<15>    ........................................ 0       
FLASH_B_DQ<14>    ........................................ 0       
FLASH_B_DQ<13>    ........................................ 0       
FLASH_B_DQ<12>    ........................................ 0       
FLASH_B_DQ<11>    ........................................ 0       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB15 ***********************************
This function block is part of I/O Bank number:               1
Number of function block inputs used/remaining:               14/26
Number of function block control terms used/remaining:        2/2
Number of PLA product terms used/remaining:                   24/32
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
FLASH_A_DQ<4>                 4     FB15_1  118  I/O     I/O    +           +  
FLASH_A_DQ<5>                 4     FB15_2  119  I/O     I/O    +           +  
FLASH_A_DQ<6>                 4     FB15_3  120  I/O     I/O    +           +  
FLASH_A_DQ<7>                 4     FB15_4  121  I/O     I/O    +           +  
FLASH_A_DQ<8>                 4     FB15_5  122  I/O     I/O    +           +  
FLASH_A_DQ<9>                 4     FB15_6  123  I/O     I/O    +           +  
(unused)                      0     FB15_7       (b)           
(unused)                      0     FB15_8       (b)           
(unused)                      0     FB15_9       (b)           
(unused)                      0     FB15_10      (b)           
FLASH_A_DQ<10>                4     FB15_11 125  I/O     I/O    +           +  
FLASH_A_DQ<11>                4     FB15_12 126  I/O     I/O    +           +  
FLASH_A_DQ<12>                4     FB15_13 127  I/O     I/O    +           +  
FLASH_A_DQ<13>                4     FB15_14 128  I/O     I/O    +           +  
(unused)                      0     FB15_15      (b)           
FLASH_A_DQ<14>                4     FB15_16 131  I/O     I/O    +           +  

Signals Used by Logic in Function Block
  1: DONE                6: FPGA_data<14>.PIN  11: FPGA_data<8>.PIN 
  2: FPGA_data<10>.PIN   7: FPGA_data<4>.PIN   12: FPGA_data<9>.PIN 
  3: FPGA_data<11>.PIN   8: FPGA_data<5>.PIN   13: Flash_A_G_buffered 
  4: FPGA_data<12>.PIN   9: FPGA_data<6>.PIN   14: N_PZ_761 
  5: FPGA_data<13>.PIN  10: FPGA_data<7>.PIN  

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FLASH_A_DQ<4>     X.....X.....XX.......................... 4       
FLASH_A_DQ<5>     X......X....XX.......................... 4       
FLASH_A_DQ<6>     X.......X...XX.......................... 4       
FLASH_A_DQ<7>     X........X..XX.......................... 4       
FLASH_A_DQ<8>     X.........X.XX.......................... 4       
FLASH_A_DQ<9>     X..........XXX.......................... 4       
FLASH_A_DQ<10>    XX..........XX.......................... 4       
FLASH_A_DQ<11>    X.X.........XX.......................... 4       
FLASH_A_DQ<12>    X..X........XX.......................... 4       
FLASH_A_DQ<13>    X...X.......XX.......................... 4       
FLASH_A_DQ<14>    X....X......XX.......................... 4       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*********************************** FB16 ***********************************
This function block is part of I/O Bank number:               1
Number of function block inputs used/remaining:               9/31
Number of function block control terms used/remaining:        2/2
Number of PLA product terms used/remaining:                   10/46
Signal                        Total Loc     Pin  Pin     Pin   CTC CTR CTS CTE
Name                          Pt            No.  Type    Use   
(unused)                      0     FB16_1  90   I/O     I     
PrevInit_B                    2     FB16_2  89   I/O     I      +          
FPGA_CCLK                     2     FB16_3  88   I/O     O                 
(unused)                      0     FB16_4  87   I/O     I     
FPGA_clock                    2     FB16_5  86   I/O     O                 
(unused)                      0     FB16_6  85   I/O           
(unused)                      0     FB16_7       (b)           
(unused)                      0     FB16_8       (b)           
(unused)                      0     FB16_9       (b)           
(unused)                      0     FB16_10      (b)           
(unused)                      0     FB16_11 84   I/O           
LEDs<0>                       1     FB16_12 83   I/O     O                 
LEDs<1>                       1     FB16_13 82   I/O     O                 
LEDs<2>                       0     FB16_14 80   I/O     O                 
LEDs<3>                       1     FB16_15 78   I/O     O                 
FLASH_A_DQ<15>                4     FB16_16 77   I/O     I/O    +           +  

Signals Used by Logic in Function Block
  1: CPLD_100MHZ        4: FPGA_data<15>.PIN    7: N_PZ_761 
  2: DONE               5: Flash_A_G_buffered   8: Program_B 
  3: FPGA_data<0>.PIN   6: INIT_B               9: clk_cnt_i<1> 

Signal                     1         2         3         4 FB      
Name             0----+----0----+----0----+----0----+----0 Inputs  
FPGA_CCLK         XX......X............................... 3       
FPGA_clock        XX......X............................... 3       
LEDs<0>           .......X................................ 1       
LEDs<1>           .....X.................................. 1       
LEDs<2>           ........................................ 0       
LEDs<3>           ..X..................................... 1       
FLASH_A_DQ<15>    .X.XX.X................................. 4       
                 0----+----1----+----2----+----3----+----4
                           0         0         0         0
*******************************  Equations  ********************************

********** Mapped Logic **********

FDCPE_AlternateCycle: FDCPE port map (AlternateCycle,AlternateCycle_D,N_PZ_761,'0','0','1');
AlternateCycle_D <= ((DONE AND AlternateCycle)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause));

FDCPE_ConfProceed: FDCPE port map (ConfProceed,ConfProceed_D,N_PZ_761,'0','0','1');
ConfProceed_D <= ((DONE AND ConfProceed)
	OR (ConfProceed AND Program_B)
	OR (NOT DONE AND INIT_B AND NOT PrevInit_B));

FDCPE_DelayedPause: FDCPE port map (DelayedPause,DelayedPause_D,N_PZ_761,'0','0','1');
DelayedPause_D <= NOT (((DONE AND NOT DelayedPause)
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND 
	NOT pause(22) AND NOT pause(23))));

FDCPE_FLASH_AK: FDCPE port map (FLASH_AK,AlternateCycle,N_PZ_761,'0','0',FLASH_AK_CE);
FLASH_AK_CE <= (NOT DONE AND NOT DelayedPause);

FDCPE_FLASH_A_A0: FDCPE port map (FLASH_A_A(0),FPGA_A(0),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A1: FDCPE port map (FLASH_A_A(1),FPGA_A(1),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A2: FDCPE port map (FLASH_A_A(2),FPGA_A(2),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A3: FDCPE port map (FLASH_A_A(3),FPGA_A(3),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A4: FDCPE port map (FLASH_A_A(4),FPGA_A(4),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A5: FDCPE port map (FLASH_A_A(5),FPGA_A(5),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A6: FDCPE port map (FLASH_A_A(6),FPGA_A(6),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A7: FDCPE port map (FLASH_A_A(7),FPGA_A(7),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A8: FDCPE port map (FLASH_A_A(8),FPGA_A(8),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A9: FDCPE port map (FLASH_A_A(9),FPGA_A(9),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A10: FDCPE port map (FLASH_A_A(10),FPGA_A(10),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A11: FDCPE port map (FLASH_A_A(11),FPGA_A(11),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A12: FDCPE port map (FLASH_A_A(12),FPGA_A(12),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A13: FDCPE port map (FLASH_A_A(13),FPGA_A(13),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A14: FDCPE port map (FLASH_A_A(14),FPGA_A(14),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A15: FDCPE port map (FLASH_A_A(15),FPGA_A(15),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A16: FDCPE port map (FLASH_A_A(16),FPGA_A(16),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A17: FDCPE port map (FLASH_A_A(17),FPGA_A(17),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A18: FDCPE port map (FLASH_A_A(18),FPGA_A(18),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A19: FDCPE port map (FLASH_A_A(19),FPGA_A(19),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A20: FDCPE port map (FLASH_A_A(20),FPGA_A(20),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A21: FDCPE port map (FLASH_A_A(21),FPGA_A(21),N_PZ_761,'0','0',DONE);

FDCPE_FLASH_A_A22: FDCPE port map (FLASH_A_A(22),FPGA_A(22),N_PZ_761,'0','0',DONE);


FLASH_A_A(23) <= '0';

FDCPE_FLASH_A_DQ0: FDCPE port map (FLASH_A_DQ_I(0),FPGA_data(0).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(0) <= FLASH_A_DQ_I(0) when FLASH_A_DQ_OE(0) = '1' else 'Z';
FLASH_A_DQ_OE(0) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ1: FDCPE port map (FLASH_A_DQ_I(1),FPGA_data(1).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(1) <= FLASH_A_DQ_I(1) when FLASH_A_DQ_OE(1) = '1' else 'Z';
FLASH_A_DQ_OE(1) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ2: FDCPE port map (FLASH_A_DQ_I(2),FPGA_data(2).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(2) <= FLASH_A_DQ_I(2) when FLASH_A_DQ_OE(2) = '1' else 'Z';
FLASH_A_DQ_OE(2) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ3: FDCPE port map (FLASH_A_DQ_I(3),FPGA_data(3).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(3) <= FLASH_A_DQ_I(3) when FLASH_A_DQ_OE(3) = '1' else 'Z';
FLASH_A_DQ_OE(3) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ4: FDCPE port map (FLASH_A_DQ_I(4),FPGA_data(4).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(4) <= FLASH_A_DQ_I(4) when FLASH_A_DQ_OE(4) = '1' else 'Z';
FLASH_A_DQ_OE(4) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ5: FDCPE port map (FLASH_A_DQ_I(5),FPGA_data(5).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(5) <= FLASH_A_DQ_I(5) when FLASH_A_DQ_OE(5) = '1' else 'Z';
FLASH_A_DQ_OE(5) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ6: FDCPE port map (FLASH_A_DQ_I(6),FPGA_data(6).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(6) <= FLASH_A_DQ_I(6) when FLASH_A_DQ_OE(6) = '1' else 'Z';
FLASH_A_DQ_OE(6) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ7: FDCPE port map (FLASH_A_DQ_I(7),FPGA_data(7).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(7) <= FLASH_A_DQ_I(7) when FLASH_A_DQ_OE(7) = '1' else 'Z';
FLASH_A_DQ_OE(7) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ8: FDCPE port map (FLASH_A_DQ_I(8),FPGA_data(8).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(8) <= FLASH_A_DQ_I(8) when FLASH_A_DQ_OE(8) = '1' else 'Z';
FLASH_A_DQ_OE(8) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ9: FDCPE port map (FLASH_A_DQ_I(9),FPGA_data(9).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(9) <= FLASH_A_DQ_I(9) when FLASH_A_DQ_OE(9) = '1' else 'Z';
FLASH_A_DQ_OE(9) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ10: FDCPE port map (FLASH_A_DQ_I(10),FPGA_data(10).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(10) <= FLASH_A_DQ_I(10) when FLASH_A_DQ_OE(10) = '1' else 'Z';
FLASH_A_DQ_OE(10) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ11: FDCPE port map (FLASH_A_DQ_I(11),FPGA_data(11).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(11) <= FLASH_A_DQ_I(11) when FLASH_A_DQ_OE(11) = '1' else 'Z';
FLASH_A_DQ_OE(11) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ12: FDCPE port map (FLASH_A_DQ_I(12),FPGA_data(12).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(12) <= FLASH_A_DQ_I(12) when FLASH_A_DQ_OE(12) = '1' else 'Z';
FLASH_A_DQ_OE(12) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ13: FDCPE port map (FLASH_A_DQ_I(13),FPGA_data(13).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(13) <= FLASH_A_DQ_I(13) when FLASH_A_DQ_OE(13) = '1' else 'Z';
FLASH_A_DQ_OE(13) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ14: FDCPE port map (FLASH_A_DQ_I(14),FPGA_data(14).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(14) <= FLASH_A_DQ_I(14) when FLASH_A_DQ_OE(14) = '1' else 'Z';
FLASH_A_DQ_OE(14) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ15: FDCPE port map (FLASH_A_DQ_I(15),FPGA_data(15).PIN,N_PZ_761,'0','0',DONE);
FLASH_A_DQ(15) <= FLASH_A_DQ_I(15) when FLASH_A_DQ_OE(15) = '1' else 'Z';
FLASH_A_DQ_OE(15) <= (DONE AND Flash_A_G_buffered);

FDCPE_FLASH_A_DQ_buffered0: FDCPE port map (FLASH_A_DQ_buffered(0),FLASH_A_DQ_buffered_D(0),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(0) <= NOT (((DONE AND NOT FLASH_A_DQ(0).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(0).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(0))));

FDCPE_FLASH_A_DQ_buffered1: FDCPE port map (FLASH_A_DQ_buffered(1),FLASH_A_DQ_buffered_D(1),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(1) <= NOT (((DONE AND NOT FLASH_A_DQ(1).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(1).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(1))));

FDCPE_FLASH_A_DQ_buffered2: FDCPE port map (FLASH_A_DQ_buffered(2),FLASH_A_DQ_buffered_D(2),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(2) <= NOT (((DONE AND NOT FLASH_A_DQ(2).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(2).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(2))));

FDCPE_FLASH_A_DQ_buffered3: FDCPE port map (FLASH_A_DQ_buffered(3),FLASH_A_DQ_buffered_D(3),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(3) <= NOT (((DONE AND NOT FLASH_A_DQ(3).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(3).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(3))));

FDCPE_FLASH_A_DQ_buffered4: FDCPE port map (FLASH_A_DQ_buffered(4),FLASH_A_DQ_buffered_D(4),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(4) <= NOT (((DONE AND NOT FLASH_A_DQ(4).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(4).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(4))));

FDCPE_FLASH_A_DQ_buffered5: FDCPE port map (FLASH_A_DQ_buffered(5),FLASH_A_DQ_buffered_D(5),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(5) <= NOT (((DONE AND NOT FLASH_A_DQ(5).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(5).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(5))));

FDCPE_FLASH_A_DQ_buffered6: FDCPE port map (FLASH_A_DQ_buffered(6),FLASH_A_DQ_buffered_D(6),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(6) <= NOT (((DONE AND NOT FLASH_A_DQ(6).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(6).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(6))));

FDCPE_FLASH_A_DQ_buffered7: FDCPE port map (FLASH_A_DQ_buffered(7),FLASH_A_DQ_buffered_D(7),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(7) <= NOT (((DONE AND NOT FLASH_A_DQ(7).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(7).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(7))));

FDCPE_FLASH_A_DQ_buffered8: FDCPE port map (FLASH_A_DQ_buffered(8),FLASH_A_DQ_buffered_D(8),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(8) <= NOT (((DONE AND NOT FLASH_A_DQ(8).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(8).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(8))));

FDCPE_FLASH_A_DQ_buffered9: FDCPE port map (FLASH_A_DQ_buffered(9),FLASH_A_DQ_buffered_D(9),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(9) <= NOT (((DONE AND NOT FLASH_A_DQ(9).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(9).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(9))));

FDCPE_FLASH_A_DQ_buffered10: FDCPE port map (FLASH_A_DQ_buffered(10),FLASH_A_DQ_buffered_D(10),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(10) <= NOT (((DONE AND NOT FLASH_A_DQ(10).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(10).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(10))));

FDCPE_FLASH_A_DQ_buffered11: FDCPE port map (FLASH_A_DQ_buffered(11),FLASH_A_DQ_buffered_D(11),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(11) <= NOT (((DONE AND NOT FLASH_A_DQ(11).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(11).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(11))));

FDCPE_FLASH_A_DQ_buffered12: FDCPE port map (FLASH_A_DQ_buffered(12),FLASH_A_DQ_buffered_D(12),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(12) <= NOT (((DONE AND NOT FLASH_A_DQ(12).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(12).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(12))));

FDCPE_FLASH_A_DQ_buffered13: FDCPE port map (FLASH_A_DQ_buffered(13),FLASH_A_DQ_buffered_D(13),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(13) <= NOT (((DONE AND NOT FLASH_A_DQ(13).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(13).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(13))));

FDCPE_FLASH_A_DQ_buffered14: FDCPE port map (FLASH_A_DQ_buffered(14),FLASH_A_DQ_buffered_D(14),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(14) <= NOT (((DONE AND NOT FLASH_A_DQ(14).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(14).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(14))));

FDCPE_FLASH_A_DQ_buffered15: FDCPE port map (FLASH_A_DQ_buffered(15),FLASH_A_DQ_buffered_D(15),N_PZ_761,'0','0','1');
FLASH_A_DQ_buffered_D(15) <= NOT (((DONE AND NOT FLASH_A_DQ(15).PIN)
	OR (AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ(15).PIN)
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(15))));

FDCPE_FLASH_A_E: FDCPE port map (FLASH_A_E,FLASH_A_E_D,N_PZ_761,'0','0','1');
FLASH_A_E_D <= (DONE AND FPGA_E);

FDCPE_FLASH_A_G: FDCPE port map (FLASH_A_G,FLASH_A_G_D,N_PZ_761,'0','0','1');
FLASH_A_G_D <= (DONE AND FPGA_G);


FLASH_A_K <= NOT (((DONE AND NOT clk_cnt_i(1))
	OR (NOT DONE AND NOT FLASH_AK)));

FDCPE_FLASH_A_L: FDCPE port map (FLASH_A_L,FLASH_A_L_D,N_PZ_761,'0','0','1');
FLASH_A_L_D <= (DONE AND FPGA_L);


FLASH_A_RP <= NOT ('0');


FLASH_A_RW <= NOT ('0');


FLASH_A_WP <= NOT ('0');

FDCPE_FLASH_A_W: FDCPE port map (FLASH_A_W,FLASH_A_W_D,N_PZ_761,'0','0','1');
FLASH_A_W_D <= NOT ((DONE AND NOT FPGA_W));


FLASH_B_DQ(0) <= '0';


FLASH_B_DQ(1) <= '0';


FLASH_B_DQ(2) <= '0';


FLASH_B_DQ(3) <= '0';


FLASH_B_DQ(4) <= '0';


FLASH_B_DQ(5) <= '0';


FLASH_B_DQ(6) <= '0';


FLASH_B_DQ(7) <= '0';


FLASH_B_DQ(8) <= '0';


FLASH_B_DQ(9) <= '0';


FLASH_B_DQ(10) <= '0';


FLASH_B_DQ(11) <= '0';


FLASH_B_DQ(12) <= '0';


FLASH_B_DQ(13) <= '0';


FLASH_B_DQ(14) <= '0';


FLASH_B_DQ(15) <= '0';

FDCPE_FPGAData0: FDCPE port map (FPGAData(0),FPGAData_D(0),N_PZ_761,'0','0','1');
FPGAData_D(0) <= NOT (((DONE AND NOT FPGAData(0))
	OR (NOT DONE AND AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(15))
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(7))));

FDCPE_FPGAData1: FDCPE port map (FPGAData(1),FPGAData_D(1),N_PZ_761,'0','0','1');
FPGAData_D(1) <= NOT (((DONE AND NOT FPGAData(1))
	OR (NOT DONE AND AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(14))
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(6))));

FDCPE_FPGAData2: FDCPE port map (FPGAData(2),FPGAData_D(2),N_PZ_761,'0','0','1');
FPGAData_D(2) <= NOT (((DONE AND NOT FPGAData(2))
	OR (NOT DONE AND AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(13))
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(5))));

FDCPE_FPGAData3: FDCPE port map (FPGAData(3),FPGAData_D(3),N_PZ_761,'0','0','1');
FPGAData_D(3) <= NOT (((DONE AND NOT FPGAData(3))
	OR (NOT DONE AND AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(12))
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(4))));

FDCPE_FPGAData4: FDCPE port map (FPGAData(4),FPGAData_D(4),N_PZ_761,'0','0','1');
FPGAData_D(4) <= NOT (((DONE AND NOT FPGAData(4))
	OR (NOT DONE AND AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(11))
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(3))));

FDCPE_FPGAData5: FDCPE port map (FPGAData(5),FPGAData_D(5),N_PZ_761,'0','0','1');
FPGAData_D(5) <= NOT (((DONE AND NOT FPGAData(5))
	OR (NOT DONE AND AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(10))
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(2))));

FDCPE_FPGAData6: FDCPE port map (FPGAData(6),FPGAData_D(6),N_PZ_761,'0','0','1');
FPGAData_D(6) <= NOT (((DONE AND NOT FPGAData(6))
	OR (NOT DONE AND AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(9))
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(1))));

FDCPE_FPGAData7: FDCPE port map (FPGAData(7),FPGAData_D(7),N_PZ_761,'0','0','1');
FPGAData_D(7) <= NOT (((DONE AND NOT FPGAData(7))
	OR (NOT DONE AND AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(8))
	OR (NOT DONE AND NOT AlternateCycle AND NOT DelayedPause AND 
	NOT FLASH_A_DQ_buffered(0))));


FPGA_CCLK <= ((DONE AND NOT clk_cnt_i(1))
	OR (NOT DONE AND NOT CPLD_100MHZ));


FPGA_clock <= NOT (((DONE AND NOT clk_cnt_i(1))
	OR (NOT DONE AND NOT CPLD_100MHZ)));


FPGA_data_I(0) <= NOT (((DONE AND NOT FLASH_A_DQ_buffered(0))
	OR (NOT DONE AND NOT FPGAData(0))));
FPGA_data(0) <= FPGA_data_I(0) when FPGA_data_OE(0) = '1' else 'Z';
FPGA_data_OE(0) <= NOT N_PZ_680;


FPGA_data_I(1) <= NOT (((DONE AND NOT FLASH_A_DQ_buffered(1))
	OR (NOT DONE AND NOT FPGAData(1))));
FPGA_data(1) <= FPGA_data_I(1) when FPGA_data_OE(1) = '1' else 'Z';
FPGA_data_OE(1) <= NOT N_PZ_680;


FPGA_data_I(2) <= NOT (((DONE AND NOT FLASH_A_DQ_buffered(2))
	OR (NOT DONE AND NOT FPGAData(2))));
FPGA_data(2) <= FPGA_data_I(2) when FPGA_data_OE(2) = '1' else 'Z';
FPGA_data_OE(2) <= NOT N_PZ_680;


FPGA_data_I(3) <= NOT (((DONE AND NOT FLASH_A_DQ_buffered(3))
	OR (NOT DONE AND NOT FPGAData(3))));
FPGA_data(3) <= FPGA_data_I(3) when FPGA_data_OE(3) = '1' else 'Z';
FPGA_data_OE(3) <= NOT N_PZ_680;


FPGA_data_I(4) <= NOT (((DONE AND NOT FLASH_A_DQ_buffered(4))
	OR (NOT DONE AND NOT FPGAData(4))));
FPGA_data(4) <= FPGA_data_I(4) when FPGA_data_OE(4) = '1' else 'Z';
FPGA_data_OE(4) <= NOT N_PZ_680;


FPGA_data_I(5) <= NOT (((DONE AND NOT FLASH_A_DQ_buffered(5))
	OR (NOT DONE AND NOT FPGAData(5))));
FPGA_data(5) <= FPGA_data_I(5) when FPGA_data_OE(5) = '1' else 'Z';
FPGA_data_OE(5) <= NOT N_PZ_680;


FPGA_data_I(6) <= NOT (((DONE AND NOT FLASH_A_DQ_buffered(6))
	OR (NOT DONE AND NOT FPGAData(6))));
FPGA_data(6) <= FPGA_data_I(6) when FPGA_data_OE(6) = '1' else 'Z';
FPGA_data_OE(6) <= NOT N_PZ_680;


FPGA_data_I(7) <= NOT (((DONE AND NOT FLASH_A_DQ_buffered(7))
	OR (NOT DONE AND NOT FPGAData(7))));
FPGA_data(7) <= FPGA_data_I(7) when FPGA_data_OE(7) = '1' else 'Z';
FPGA_data_OE(7) <= NOT N_PZ_680;


FPGA_data_I(8) <= NOT ((DONE AND NOT FLASH_A_DQ_buffered(8)));
FPGA_data(8) <= FPGA_data_I(8) when FPGA_data_OE(8) = '1' else 'Z';
FPGA_data_OE(8) <= NOT N_PZ_680;


FPGA_data_I(9) <= NOT ((DONE AND NOT FLASH_A_DQ_buffered(9)));
FPGA_data(9) <= FPGA_data_I(9) when FPGA_data_OE(9) = '1' else 'Z';
FPGA_data_OE(9) <= NOT N_PZ_680;


FPGA_data_I(10) <= NOT ((DONE AND NOT FLASH_A_DQ_buffered(10)));
FPGA_data(10) <= FPGA_data_I(10) when FPGA_data_OE(10) = '1' else 'Z';
FPGA_data_OE(10) <= NOT N_PZ_680;


FPGA_data_I(11) <= NOT ((DONE AND NOT FLASH_A_DQ_buffered(11)));
FPGA_data(11) <= FPGA_data_I(11) when FPGA_data_OE(11) = '1' else 'Z';
FPGA_data_OE(11) <= NOT N_PZ_680;


FPGA_data_I(12) <= NOT ((DONE AND NOT FLASH_A_DQ_buffered(12)));
FPGA_data(12) <= FPGA_data_I(12) when FPGA_data_OE(12) = '1' else 'Z';
FPGA_data_OE(12) <= NOT N_PZ_680;


FPGA_data_I(13) <= NOT ((DONE AND NOT FLASH_A_DQ_buffered(13)));
FPGA_data(13) <= FPGA_data_I(13) when FPGA_data_OE(13) = '1' else 'Z';
FPGA_data_OE(13) <= NOT N_PZ_680;


FPGA_data_I(14) <= NOT ((DONE AND NOT FLASH_A_DQ_buffered(14)));
FPGA_data(14) <= FPGA_data_I(14) when FPGA_data_OE(14) = '1' else 'Z';
FPGA_data_OE(14) <= NOT N_PZ_680;


FPGA_data_I(15) <= NOT ((DONE AND NOT FLASH_A_DQ_buffered(15)));
FPGA_data(15) <= FPGA_data_I(15) when FPGA_data_OE(15) = '1' else 'Z';
FPGA_data_OE(15) <= NOT N_PZ_680;

FDCPE_Flash_A_G_buffered: FDCPE port map (Flash_A_G_buffered,FPGA_G,N_PZ_761,'0','0',DONE);


LEDs(0) <= Program_B;


LEDs(1) <= INIT_B;


LEDs(2) <= '0';


LEDs(3) <= FPGA_data(0).PIN;


N_PZ_680 <= (DONE AND Flash_A_G_buffered);


N_PZ_761 <= ((DONE AND clk_cnt_i(1))
	OR (NOT DONE AND CPLD_100MHZ));

FDCPE_PrevInit_B: FDCPE port map (PrevInit_B,INIT_B,N_PZ_761,'0','0',NOT DONE);

FTCPE_clk_cnt_i0: FTCPE port map (clk_cnt_i(0),'0',CPLD_100MHZ,'0','0','1');

FTCPE_clk_cnt_i1: FTCPE port map (clk_cnt_i(1),clk_cnt_i(0),CPLD_100MHZ,'0','0','1');

FDCPE_pause0: FDCPE port map (pause(0),pause_D(0),N_PZ_761,'0','0','1');
pause_D(0) <= NOT (((DONE AND NOT pause(0))
	OR (NOT DONE AND ConfProceed AND pause(0))
	OR (NOT DONE AND ConfProceed AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND 
	NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND NOT pause(18) AND 
	NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND NOT pause(22) AND 
	NOT pause(23))));

FDCPE_pause1: FDCPE port map (pause(1),pause_D(1),N_PZ_761,'0','0','1');
pause_D(1) <= NOT (((DONE AND NOT pause(1))
	OR (ConfProceed AND pause(0) AND NOT pause(1))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND pause(1))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND 
	NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND NOT pause(18) AND 
	NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND NOT pause(22) AND 
	NOT pause(23))));

FDCPE_pause2: FDCPE port map (pause(2),pause_D(2),N_PZ_761,'0','0','1');
pause_D(2) <= NOT (((DONE AND NOT pause(2))
	OR (ConfProceed AND pause(0) AND NOT pause(2))
	OR (ConfProceed AND pause(1) AND NOT pause(2))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(1) AND 
	pause(2))
	OR (ConfProceed AND NOT pause(10) AND NOT pause(11) AND NOT pause(2) AND 
	NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND 
	NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND 
	NOT pause(17) AND NOT pause(8) AND NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND 
	NOT pause(20) AND NOT pause(21) AND NOT pause(22) AND NOT pause(23))));

FDCPE_pause3: FDCPE port map (pause(3),pause_D(3),N_PZ_761,'0','0','1');
pause_D(3) <= NOT (((DONE AND NOT pause(3))
	OR (ConfProceed AND pause(0) AND NOT pause(3))
	OR (ConfProceed AND pause(1) AND NOT pause(3))
	OR (ConfProceed AND pause(2) AND NOT pause(3))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(1) AND 
	NOT pause(2) AND pause(3))
	OR (ConfProceed AND NOT pause(10) AND NOT pause(11) AND NOT pause(12) AND 
	NOT pause(3) AND NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND 
	NOT pause(15) AND NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND 
	NOT pause(8) AND NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND 
	NOT pause(21) AND NOT pause(22) AND NOT pause(23))));

FDCPE_pause4: FDCPE port map (pause(4),pause_D(4),N_PZ_761,'0','0','1');
pause_D(4) <= NOT (((DONE AND NOT pause(4))
	OR (ConfProceed AND pause(0) AND NOT pause(4))
	OR (ConfProceed AND pause(1) AND NOT pause(4))
	OR (ConfProceed AND pause(2) AND NOT pause(4))
	OR (ConfProceed AND pause(3) AND NOT pause(4))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(1) AND 
	NOT pause(2) AND NOT pause(3) AND pause(4))
	OR (ConfProceed AND NOT pause(10) AND NOT pause(11) AND NOT pause(12) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND 
	NOT pause(22) AND NOT pause(23))));

FDCPE_pause5: FDCPE port map (pause(5),pause_D(5),N_PZ_761,'0','0','1');
pause_D(5) <= NOT (((DONE AND NOT pause(5))
	OR (ConfProceed AND pause(0) AND NOT pause(5))
	OR (ConfProceed AND pause(1) AND NOT pause(5))
	OR (ConfProceed AND pause(2) AND NOT pause(5))
	OR (ConfProceed AND pause(3) AND NOT pause(5))
	OR (ConfProceed AND pause(4) AND NOT pause(5))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(1) AND 
	NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND pause(5))
	OR (ConfProceed AND NOT pause(10) AND NOT pause(11) AND NOT pause(12) AND 
	NOT pause(13) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND 
	NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND NOT pause(18) AND 
	NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND NOT pause(22) AND 
	NOT pause(23))));

FDCPE_pause6: FDCPE port map (pause(6),pause_D(6),N_PZ_761,'0','0','1');
pause_D(6) <= NOT (((DONE AND NOT pause(6))
	OR (ConfProceed AND pause(0) AND NOT pause(6))
	OR (ConfProceed AND pause(1) AND NOT pause(6))
	OR (ConfProceed AND pause(2) AND NOT pause(6))
	OR (ConfProceed AND pause(3) AND NOT pause(6))
	OR (ConfProceed AND pause(4) AND NOT pause(6))
	OR (ConfProceed AND pause(5) AND NOT pause(6))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(1) AND 
	NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND NOT pause(5) AND pause(6))
	OR (ConfProceed AND NOT pause(10) AND NOT pause(11) AND NOT pause(12) AND 
	NOT pause(13) AND NOT pause(14) AND NOT pause(15) AND NOT pause(6) AND NOT pause(16) AND 
	NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND NOT pause(18) AND NOT pause(9) AND 
	NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND NOT pause(22) AND NOT pause(23))));

FDCPE_pause7: FDCPE port map (pause(7),pause_D(7),N_PZ_761,'0','0','1');
pause_D(7) <= NOT (((DONE AND NOT pause(7))
	OR (ConfProceed AND pause(0) AND NOT pause(7))
	OR (ConfProceed AND pause(1) AND NOT pause(7))
	OR (ConfProceed AND pause(2) AND NOT pause(7))
	OR (ConfProceed AND pause(3) AND NOT pause(7))
	OR (ConfProceed AND pause(4) AND NOT pause(7))
	OR (ConfProceed AND pause(5) AND NOT pause(7))
	OR (ConfProceed AND pause(6) AND NOT pause(7))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(1) AND 
	NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND 
	pause(7))
	OR (ConfProceed AND NOT pause(10) AND NOT pause(11) AND NOT pause(12) AND 
	NOT pause(13) AND NOT pause(14) AND NOT pause(15) AND NOT pause(16) AND NOT pause(7) AND 
	NOT pause(17) AND NOT pause(8) AND NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND 
	NOT pause(20) AND NOT pause(21) AND NOT pause(22) AND NOT pause(23))));

FTCPE_pause8: FTCPE port map (pause(8),pause_T(8),N_PZ_761,'0','0','1');
pause_T(8) <= NOT (((DONE)
	OR (ConfProceed AND pause(0))
	OR (ConfProceed AND pause(1))
	OR (ConfProceed AND pause(2))
	OR (ConfProceed AND pause(3))
	OR (ConfProceed AND pause(4))
	OR (ConfProceed AND pause(5))
	OR (ConfProceed AND pause(6))
	OR (ConfProceed AND pause(7))
	OR (NOT ConfProceed AND NOT pause(8))
	OR (NOT pause(10) AND NOT pause(11) AND NOT pause(12) AND NOT pause(13) AND 
	NOT pause(14) AND NOT pause(15) AND NOT pause(16) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND 
	NOT pause(22) AND NOT pause(23))));

FTCPE_pause9: FTCPE port map (pause(9),pause_T(9),N_PZ_761,'0','0','1');
pause_T(9) <= NOT (((DONE)
	OR (ConfProceed AND pause(0))
	OR (ConfProceed AND pause(1))
	OR (ConfProceed AND pause(2))
	OR (ConfProceed AND pause(3))
	OR (ConfProceed AND pause(4))
	OR (ConfProceed AND pause(5))
	OR (ConfProceed AND pause(6))
	OR (ConfProceed AND pause(7))
	OR (ConfProceed AND pause(8))
	OR (NOT ConfProceed AND NOT pause(9))
	OR (NOT pause(10) AND NOT pause(11) AND NOT pause(12) AND NOT pause(13) AND 
	NOT pause(14) AND NOT pause(15) AND NOT pause(16) AND NOT pause(17) AND NOT pause(18) AND 
	NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND NOT pause(22) AND 
	NOT pause(23))));

FTCPE_pause10: FTCPE port map (pause(10),pause_T(10),N_PZ_761,'0','0','1');
pause_T(10) <= NOT (((DONE)
	OR (ConfProceed AND pause(0))
	OR (ConfProceed AND pause(1))
	OR (ConfProceed AND pause(2))
	OR (ConfProceed AND pause(3))
	OR (ConfProceed AND pause(4))
	OR (ConfProceed AND pause(5))
	OR (ConfProceed AND pause(6))
	OR (ConfProceed AND pause(7))
	OR (ConfProceed AND pause(8))
	OR (ConfProceed AND pause(9))
	OR (NOT ConfProceed AND NOT pause(10))
	OR (NOT pause(10) AND NOT pause(11) AND NOT pause(12) AND NOT pause(13) AND 
	NOT pause(14) AND NOT pause(15) AND NOT pause(16) AND NOT pause(17) AND NOT pause(18) AND 
	NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND NOT pause(22) AND NOT pause(23))));

FTCPE_pause11: FTCPE port map (pause(11),pause_T(11),N_PZ_761,'0','0','1');
pause_T(11) <= NOT (((DONE)
	OR (ConfProceed AND pause(0))
	OR (ConfProceed AND pause(10))
	OR (ConfProceed AND pause(1))
	OR (ConfProceed AND pause(2))
	OR (ConfProceed AND pause(3))
	OR (ConfProceed AND pause(4))
	OR (ConfProceed AND pause(5))
	OR (ConfProceed AND pause(6))
	OR (ConfProceed AND pause(7))
	OR (ConfProceed AND pause(8))
	OR (ConfProceed AND pause(9))
	OR (NOT ConfProceed AND NOT pause(11))
	OR (NOT pause(11) AND NOT pause(12) AND NOT pause(13) AND NOT pause(14) AND 
	NOT pause(15) AND NOT pause(16) AND NOT pause(17) AND NOT pause(18) AND NOT pause(19) AND 
	NOT pause(20) AND NOT pause(21) AND NOT pause(22) AND NOT pause(23))));

FTCPE_pause12: FTCPE port map (pause(12),pause_T(12),N_PZ_761,'0','0','1');
pause_T(12) <= ((NOT DONE AND NOT ConfProceed AND pause(12))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND pause(12) AND NOT pause(3) AND NOT pause(4) AND 
	NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND pause(13) AND 
	NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND 
	NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND 
	pause(14) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND 
	NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND 
	NOT pause(5) AND pause(15) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND 
	NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND 
	NOT pause(5) AND NOT pause(6) AND pause(16) AND NOT pause(7) AND NOT pause(8) AND 
	NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND 
	NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND pause(17) AND NOT pause(8) AND 
	NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND 
	NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND pause(18) AND 
	NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND 
	NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND 
	pause(19))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND 
	NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND 
	pause(20))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND 
	NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND 
	pause(21))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND 
	NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND 
	pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(3) AND NOT pause(4) AND 
	NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND 
	pause(23)));

FTCPE_pause13: FTCPE port map (pause(13),pause_T(13),N_PZ_761,'0','0','1');
pause_T(13) <= ((NOT DONE AND NOT ConfProceed AND pause(13))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND pause(13) AND 
	NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND 
	NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(4) AND pause(14) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND 
	NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(4) AND NOT pause(5) AND pause(15) AND NOT pause(6) AND NOT pause(7) AND 
	NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND pause(16) AND NOT pause(7) AND 
	NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND pause(17) AND 
	NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND 
	pause(18) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND 
	NOT pause(9) AND pause(19))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND 
	NOT pause(9) AND pause(20))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND 
	NOT pause(9) AND pause(21))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND 
	NOT pause(9) AND pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND 
	NOT pause(9) AND pause(23)));

FTCPE_pause14: FTCPE port map (pause(14),pause_T(14),N_PZ_761,'0','0','1');
pause_T(14) <= ((NOT DONE AND NOT ConfProceed AND pause(14))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND pause(14) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND 
	NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(5) AND pause(15) AND NOT pause(6) AND 
	NOT pause(7) AND NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND pause(16) AND 
	NOT pause(7) AND NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND 
	pause(17) AND NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND 
	NOT pause(8) AND pause(18) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND 
	NOT pause(8) AND NOT pause(9) AND pause(19))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND 
	NOT pause(8) AND NOT pause(9) AND pause(20))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND 
	NOT pause(8) AND NOT pause(9) AND pause(21))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND 
	NOT pause(8) AND NOT pause(9) AND pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(5) AND NOT pause(6) AND NOT pause(7) AND 
	NOT pause(8) AND NOT pause(9) AND pause(23)));

FTCPE_pause15: FTCPE port map (pause(15),pause_T(15),N_PZ_761,'0','0','1');
pause_T(15) <= ((NOT DONE AND NOT ConfProceed AND pause(15))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND pause(15) AND NOT pause(6) AND 
	NOT pause(7) AND NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(6) AND 
	pause(16) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(6) AND 
	NOT pause(7) AND pause(17) AND NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(6) AND 
	NOT pause(7) AND NOT pause(8) AND pause(18) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(6) AND 
	NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND pause(19))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(6) AND 
	NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND pause(20))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(6) AND 
	NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND pause(21))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(6) AND 
	NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(6) AND 
	NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND pause(23)));

FTCPE_pause16: FTCPE port map (pause(16),pause_T(16),N_PZ_761,'0','0','1');
pause_T(16) <= ((NOT DONE AND NOT ConfProceed AND pause(16))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND 
	pause(16) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(7) AND pause(17) AND NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND pause(18) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND pause(19))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND pause(20))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND pause(21))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND pause(23)));

FTCPE_pause17: FTCPE port map (pause(17),pause_T(17),N_PZ_761,'0','0','1');
pause_T(17) <= ((NOT DONE AND NOT ConfProceed AND pause(17))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND 
	NOT pause(16) AND NOT pause(7) AND pause(17) AND NOT pause(8) AND NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(8) AND pause(18) AND 
	NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND 
	pause(19))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND 
	pause(20))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND 
	pause(21))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND 
	pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(8) AND NOT pause(9) AND 
	pause(23)));

FTCPE_pause18: FTCPE port map (pause(18),pause_T(18),N_PZ_761,'0','0','1');
pause_T(18) <= ((NOT DONE AND NOT ConfProceed AND pause(18))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND 
	NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND pause(18) AND 
	NOT pause(9))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(9) AND pause(19))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(9) AND pause(20))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(9) AND pause(21))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(9) AND pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(9) AND pause(23)));

FTCPE_pause19: FTCPE port map (pause(19),pause_T(19),N_PZ_761,'0','0','1');
pause_T(19) <= ((NOT DONE AND NOT ConfProceed AND pause(19))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND 
	NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND NOT pause(18) AND 
	NOT pause(9) AND pause(19))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND pause(20))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND pause(21))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND pause(23)));

FTCPE_pause20: FTCPE port map (pause(20),pause_T(20),N_PZ_761,'0','0','1');
pause_T(20) <= ((NOT DONE AND NOT ConfProceed AND pause(20))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND 
	NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND NOT pause(18) AND 
	NOT pause(9) AND NOT pause(19) AND pause(20))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND pause(21))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND pause(23)));

FTCPE_pause21: FTCPE port map (pause(21),pause_T(21),N_PZ_761,'0','0','1');
pause_T(21) <= ((NOT DONE AND NOT ConfProceed AND pause(21))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND 
	NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND NOT pause(18) AND 
	NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND pause(21))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND pause(23)));

FTCPE_pause22: FTCPE port map (pause(22),pause_T(22),N_PZ_761,'0','0','1');
pause_T(22) <= ((NOT DONE AND NOT ConfProceed AND pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND 
	pause(22))
	OR (NOT DONE AND ConfProceed AND NOT pause(0) AND NOT pause(10) AND 
	NOT pause(1) AND NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND 
	NOT pause(13) AND NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND 
	NOT pause(6) AND NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND 
	NOT pause(18) AND NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND 
	pause(23)));

FTCPE_pause23: FTCPE port map (pause(23),pause_T(23),N_PZ_761,'0','0','1');
pause_T(23) <= ((NOT DONE AND NOT ConfProceed AND pause(23))
	OR (NOT DONE AND NOT pause(0) AND NOT pause(10) AND NOT pause(1) AND 
	NOT pause(11) AND NOT pause(2) AND NOT pause(12) AND NOT pause(3) AND NOT pause(13) AND 
	NOT pause(4) AND NOT pause(14) AND NOT pause(5) AND NOT pause(15) AND NOT pause(6) AND 
	NOT pause(16) AND NOT pause(7) AND NOT pause(17) AND NOT pause(8) AND NOT pause(18) AND 
	NOT pause(9) AND NOT pause(19) AND NOT pause(20) AND NOT pause(21) AND NOT pause(22) AND 
	pause(23)));


Register Legend:
 FDCPE (Q,D,C,CLR,PRE,CE); 
 FDDCPE (Q,D,C,CLR,PRE,CE); 
 FTCPE (Q,D,C,CLR,PRE,CE); 
 FTDCPE (Q,D,C,CLR,PRE,CE); 
 LDCP  (Q,D,G,CLR,PRE); 

******************************  Device Pin Out *****************************

Device : XC2C256-6-PQ208


Pin Signal                         Pin Signal                        
No. Name                           No. Name                          
  1 VCC                             105 VCCIO-3.3                     
  2 FLASH_A_A<23>                   106 FLASH_A_DQ<3>                 
  3 KPR                             107 FLASH_B_DQ<0>                 
  4 KPR                             108 FLASH_B_DQ<1>                 
  5 KPR                             109 FLASH_B_DQ<2>                 
  6 KPR                             110 FLASH_B_DQ<3>                 
  7 KPR                             111 FLASH_B_DQ<4>                 
  8 KPR                             112 FLASH_B_DQ<5>                 
  9 KPR                             113 FLASH_B_DQ<6>                 
 10 KPR                             114 FLASH_B_DQ<7>                 
 11 VCCAUX                          115 FLASH_B_DQ<8>                 
 12 KPR                             116 FLASH_B_DQ<9>                 
 13 GND                             117 FLASH_B_DQ<10>                
 14 KPR                             118 FLASH_A_DQ<4>                 
 15 KPR                             119 FLASH_A_DQ<5>                 
 16 KPR                             120 FLASH_A_DQ<6>                 
 17 KPR                             121 FLASH_A_DQ<7>                 
 18 KPR                             122 FLASH_A_DQ<8>                 
 19 KPR                             123 FLASH_A_DQ<9>                 
 20 KPR                             124 VCC                           
 21 KPR                             125 FLASH_A_DQ<10>                
 22 KPR                             126 FLASH_A_DQ<11>                
 23 KPR                             127 FLASH_A_DQ<12>                
 24 GND                             128 FLASH_A_DQ<13>                
 25 KPR                             129 GND                           
 26 VCCIO-3.3                       130 GND                           
 27 FLASH_A_A<18>                   131 FLASH_A_DQ<14>                
 28 FLASH_A_A<19>                   132 VCCIO-3.3                     
 29 FLASH_A_A<20>                   133 VCCIO-3.3                     
 30 FLASH_A_A<21>                   134 FPGA_A<17>                    
 31 FLASH_A_A<22>                   135 FPGA_A<18>                    
 32 KPR                             136 FPGA_A<19>                    
 33 VCCIO-3.3                       137 FPGA_A<20>                    
 34 FLASH_A_E                       138 FPGA_A<21>                    
 35 FLASH_A_G                       139 FPGA_A<22>                    
 36 FLASH_A_K                       140 KPR                           
 37 FLASH_A_RP                      141 GND                           
 38 KPR                             142 FPGA_W                        
 39 FLASH_A_A<0>                    143 FPGA_G                        
 40 FLASH_A_A<1>                    144 FPGA_E                        
 41 FLASH_A_A<2>                    145 FPGA_L                        
 42 GND                             146 FPGA_data<12>                 
 43 FLASH_A_A<3>                    147 FPGA_data<13>                 
 44 KPR                             148 FPGA_data<14>                 
 45 FLASH_A_A<4>                    149 FPGA_data<15>                 
 46 KPR                             150 FPGA_A<0>                     
 47 FLASH_A_A<5>                    151 FPGA_A<1>                     
 48 FLASH_A_A<6>                    152 FPGA_A<2>                     
 49 FLASH_A_A<7>                    153 FPGA_A<3>                     
 50 FLASH_A_A<8>                    154 FPGA_A<4>                     
 51 FLASH_A_A<9>                    155 FPGA_A<5>                     
 52 GND                             156 GND                           
 53 VCC                             157 VCCIO-3.3                     
 54 FLASH_A_A<10>                   158 FPGA_A<6>                     
 55 CPLD_100MHZ                     159 FPGA_A<7>                     
 56 FLASH_A_A<11>                   160 FPGA_data<0>                  
 57 FLASH_A_A<12>                   161 FPGA_data<1>                  
 58 FLASH_A_A<13>                   162 FPGA_data<2>                  
 59 VCCIO-3.3                       163 FPGA_data<3>                  
 60 FLASH_A_A<14>                   164 FPGA_data<4>                  
 61 FLASH_A_A<15>                   165 FPGA_data<5>                  
 62 FLASH_A_A<16>                   166 FPGA_data<6>                  
 63 FLASH_A_A<17>                   167 FPGA_data<7>                  
 64 FLASH_A_WP                      168 FPGA_data<8>                  
 65 FLASH_A_W                       169 FPGA_data<9>                  
 66 FLASH_A_L                       170 FPGA_data<10>                 
 67 FLASH_A_RW                      171 FPGA_data<11>                 
 68 GND                             172 VCCIO-3.3                     
 69 KPR                             173 FPGA_A<8>                     
 70 KPR                             174 FPGA_A<9>                     
 71 KPR                             175 FPGA_A<10>                    
 72 KPR                             176 TDO                           
 73 KPR                             177 GND                           
 74 KPR                             178 FPGA_A<11>                    
 75 KPR                             179 FPGA_A<12>                    
 76 KPR                             180 FPGA_A<13>                    
 77 FLASH_A_DQ<15>                  181 VCCIO-3.3                     
 78 LEDs<3>                         182 FPGA_A<14>                    
 79 VCCIO-3.3                       183 FPGA_A<15>                    
 80 LEDs<2>                         184 FPGA_A<16>                    
 81 GND                             185 KPR                           
 82 LEDs<1>                         186 KPR                           
 83 LEDs<0>                         187 KPR                           
 84 KPR                             188 KPR                           
 85 KPR                             189 KPR                           
 86 FPGA_clock                      190 GND                           
 87 DONE                            191 KPR                           
 88 FPGA_CCLK                       192 KPR                           
 89 INIT_B                          193 KPR                           
 90 Program_B                       194 KPR                           
 91 FLASH_B_DQ<11>                  195 KPR                           
 92 VCCIO-3.3                       196 KPR                           
 93 GND                             197 KPR                           
 94 TDI                             198 KPR                           
 95 FLASH_B_DQ<12>                  199 KPR                           
 96 TMS                             200 KPR                           
 97 FLASH_B_DQ<13>                  201 KPR                           
 98 TCK                             202 KPR                           
 99 FLASH_B_DQ<14>                  203 KPR                           
100 FLASH_B_DQ<15>                  204 VCCIO-3.3                     
101 FLASH_A_DQ<0>                   205 KPR                           
102 FLASH_A_DQ<1>                   206 KPR                           
103 FLASH_A_DQ<2>                   207 GND                           
104 GND                             208 KPR                           


Legend :  NC  = Not Connected, unbonded pin
        PGND  = Unused I/O configured as additional Ground pin
         KPR  = Unused I/O with weak keeper (leave unconnected)
         WPU  = Unused I/O with weak pull up (leave unconnected)
         TIE  = Unused I/O floating -- must tie to VCC, GND or other signal
         VCC  = Dedicated Power Pin
      VCCAUX  = Power supply for JTAG pins
   VCCIO-3.3  = I/O supply voltage for LVTTL, LVCMOS33, SSTL3_I
   VCCIO-2.5  = I/O supply voltage for LVCMOS25, SSTL2_I
   VCCIO-1.8  = I/O supply voltage for LVCMOS18
   VCCIO-1.5  = I/O supply voltage for LVCMOS15, HSTL_I
        VREF  = Reference voltage for indicated input standard
       *VREF  = Reference voltage pin selected by software
         GND  = Dedicated Ground Pin
         TDI  = Test Data In, JTAG pin
         TDO  = Test Data Out, JTAG pin
         TCK  = Test Clock, JTAG pin
         TMS  = Test Mode Select, JTAG pin
  PROHIBITED  = User reserved pin
****************************  Compiler Options  ****************************

Following is a list of all global compiler options used by the fitter run.

Device(s) Specified                         : xc2c256-6-PQ208
Optimization Method                         : SPEED
Multi-Level Logic Optimization              : ON
Ignore Timing Specifications                : OFF
Default Register Power Up Value             : LOW
Keep User Location Constraints              : ON
What-You-See-Is-What-You-Get                : OFF
Exhaustive Fitting                          : OFF
Keep Unused Inputs                          : OFF
Slew Rate                                   : FAST
Set Unused I/O Pin Termination              : KEEPER
Global Clock Optimization                   : ON
Global Set/Reset Optimization               : ON
Global Ouput Enable Optimization            : ON
Enable Input Registers                      : ON
Function Block Fan-in Limit                 : 38
Use DATA_GATE Attribute                     : ON
Set Tristate Outputs to Termination Mode    : KEEPER
Default Voltage Standard for All Outputs    : LVCMOS33
Input Limit                                 : 32
Pterm Limit                                 : 36
</pre>
<form><span class="pgRef"><table width="90%" align="center"><tr>
<td align="left"><input type="button" onclick="javascript:parent.leftnav.showTop()" onmouseover="window.status='goto top of page'; return true;" onmouseout="window.status=''" value="back to top"></td>
<td align="right"><input type="button" onclick="window.print()" onmouseover="window.status='print page'; return true;" onmouseout="window.status=''" value="print page"></td>
</tr></table></span></form>
</body></html>
