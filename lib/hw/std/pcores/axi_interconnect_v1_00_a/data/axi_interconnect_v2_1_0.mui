<?xml version="1.0" encoding="ISO-8859-1"?>

<!--
############################################################################
## DISCLAIMER OF LIABILITY
##
## This file contains proprietary and confidential information of
## Xilinx, Inc. ("Xilinx"), that is distributed under a license
## from Xilinx, and may be used, copied and/or disclosed only
## pursuant to the terms of a valid license agreement with Xilinx.
##
## XILINX IS PROVIDING THIS DESIGN, CODE, OR INFORMATION
## ("MATERIALS") "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
## EXPRESSED, IMPLIED, OR STATUTORY, INCLUDING WITHOUT
## LIMITATION, ANY WARRANTY WITH RESPECT TO NONINFRINGEMENT,
## MERCHANTABILITY OR FITNESS FOR ANY PARTICULAR PURPOSE. Xilinx
## does not warrant that functions included in the Materials will
## meet the requirements of Licensee, or that the operation of the
## Materials will be uninterrupted or error-free, or that defects
## in the Materials will be corrected. Furthermore, Xilinx does
## not warrant or make any representations regarding use, or the
## results of the use, of the Materials in terms of correctness,
## accuracy, reliability or otherwise.
##
## Xilinx products are not designed or intended to be fail-safe,
## or for use in any application requiring fail-safe performance,
## such as life-support or safety devices or systems, Class III
## medical devices, nuclear facilities, applications related to
## the deployment of airbags, or any other applications that could
## lead to death, personal injury or severe property or
## environmental damage (individually and collectively, "critical
## applications"). Customer assumes the sole risk and liability
## of any use of Xilinx products in critical applications,
## subject only to applicable laws and regulations governing
## limitations on product liability.
##
## Copyright 2009 Xilinx, Inc.
## All rights reserved.
##
## This disclaimer and copyright notice must be retained as part
## of this file at all times.
############################################################################
##
## Name     : axi_interconnect_v2_1_0.mui
## Desc     : 
##          : Generated by Xilinx IP Tools and SW 
##
############################################################################
-->

<!DOCTYPE doc SYSTEM "../../ipdialog.dtd" [
	<!ENTITY C_FAMILY '
		<widget id="C_FAMILY">
			<key>C_FAMILY</key>
			<label>Family</label>
			<tip></tip>
		</widget>
	'>
	<!ENTITY C_NUM_SLAVE_SLOTS '
	<widget id="C_NUM_SLAVE_SLOTS">
		<key>C_NUM_SLAVE_SLOTS</key>
		<label>Number of Slave Slots </label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_NUM_MASTER_SLOTS '
	<widget id="C_NUM_MASTER_SLOTS">
		<key>C_NUM_MASTER_SLOTS</key>
		<label>Number of Master Slots </label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_AXI_ID_WIDTH '
	<widget id="C_AXI_ID_WIDTH">
		<key>C_AXI_ID_WIDTH</key>
		<label>AXI ID Widgth </label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_AXI_ADDR_WIDTH '
	<widget id="C_AXI_ADDR_WIDTH">
		<key>C_AXI_ADDR_WIDTH</key>
		<label>AXI Address Widgth </label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_AXI_DATA_MAX_WIDTH '
	<widget id="C_AXI_DATA_MAX_WIDTH">
		<key>C_AXI_DATA_MAX_WIDTH</key>
		<label>AXI Data Maximum Width </label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_DATA_WIDTH '
	<widget id="C_S_AXI_DATA_WIDTH">
		<key>C_S_AXI_DATA_WIDTH</key>
		<label>Slave AXI Data Width</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_DATA_WIDTH '
	<widget id="C_M_AXI_DATA_WIDTH">
		<key>C_M_AXI_DATA_WIDTH</key>
		<label>Master AXI Data Width </label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_INTERCONNECT_DATA_WIDTH '
	<widget id="C_INTERCONNECT_DATA_WIDTH">
		<key>C_INTERCONNECT_DATA_WIDTH</key>
		<label>Interconnect Crossbar Data Width </label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_PROTOCOL '
	<widget id="C_S_AXI_PROTOCOL">
		<key>C_S_AXI_PROTOCOL</key>
		<label>AXI Protocol</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_PROTOCOL '
	<widget id="C_M_AXI_PROTOCOL">
		<key>C_M_AXI_PROTOCOL</key>
		<label>Master AXI Protocol</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_BASE_ADDR '
	<widget id="C_M_AXI_BASE_ADDR">
		<key>C_M_AXI_BASE_ADDR</key>
		<label>Master AXI Base Address</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_HIGH_ADDR '
	<widget id="C_M_AXI_HIGH_ADDR">
		<key>C_M_AXI_HIGH_ADDR</key>
		<label>Master AXI High Address</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_BASE_ID '
	<widget id="C_S_AXI_BASE_ID">
		<key>C_S_AXI_BASE_ID</key>
		<label>Slave AXI Base ID</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_THREAD_ID_WIDTH '
	<widget id="C_S_AXI_THREAD_ID_WIDTH">
		<key>C_S_AXI_THREAD_ID_WIDTH</key>
		<label>Slave AXI Thread ID Width</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_IS_INTERCONNECT '
	<widget id="C_S_AXI_IS_INTERCONNECT">
		<key>C_S_AXI_IS_INTERCONNECT</key>
		<label>Slave AXI Is Interconnect</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_ACLK_RATIO '
	<widget id="C_S_AXI_ACLK_RATIO">
		<key>C_S_AXI_ACLK_RATIO</key>
		<label>Slave AXI ACLK Ratio</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_IS_ACLK_ASYNC '
	<widget id="C_S_AXI_IS_ACLK_ASYNC">
		<key>C_S_AXI_IS_ACLK_ASYNC</key>
		<label>Slvave AXI Is ACLK ASYNC</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_ACLK_RATIO '
	<widget id="C_M_AXI_ACLK_RATIO">
		<key>C_M_AXI_ACLK_RATIO</key>
		<label>Master AXI ACLK Ratio</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_IS_ACLK_ASYNC '
	<widget id="C_M_AXI_IS_ACLK_ASYNC">
		<key>C_M_AXI_IS_ACLK_ASYNC</key>
		<label>Master AXI Is ACLK ASYNC</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_INTERCONNECT_ACLK_RATIO '
	<widget id="C_INTERCONNECT_ACLK_RATIO">
		<key>C_INTERCONNECT_ACLK_RATIO</key>
		<label>Interconnect Crossbar ACLK Frequency Ratio</label>
		<tip>Used to override tool-generated value. Applies to synchronous clock conversions only.</tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_SUPPORTS_WRITE '
	<widget id="C_S_AXI_SUPPORTS_WRITE">
		<key>C_S_AXI_SUPPORTS_WRITE</key>
		<label>Slave AXI Supports Write</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_SUPPORTS_READ '
	<widget id="C_S_AXI_SUPPORTS_READ">
		<key>C_S_AXI_SUPPORTS_READ</key>
		<label>Slave AXI Supports Read</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_SUPPORTS_WRITE '
	<widget id="C_M_AXI_SUPPORTS_WRITE">
		<key>C_M_AXI_SUPPORTS_WRITE</key>
		<label>Master AXI Supports Write</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_SUPPORTS_READ '
	<widget id="C_M_AXI_SUPPORTS_READ">
		<key>C_M_AXI_SUPPORTS_READ</key>
		<label>Master AXI Supports Read</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_AXI_SUPPORTS_USER_SIGNALS '
	<widget id="C_AXI_SUPPORTS_USER_SIGNALS">
		<key>C_AXI_SUPPORTS_USER_SIGNALS</key>
		<label>Propagate USER Signals</label>
		<tip>Used to override tool-generated value to disable all USER signal pathways.</tip>
	</widget>
	'>
	<!ENTITY C_AXI_AWUSER_WIDTH '
	<widget id="C_AXI_AWUSER_WIDTH">
		<key>C_AXI_AWUSER_WIDTH</key>
		<label>AWUSER Signal Width </label>
		<tip>Used to override tool-generated value.</tip>
	</widget>
	'>
	<!ENTITY C_AXI_ARUSER_WIDTH '
	<widget id="C_AXI_ARUSER_WIDTH">
		<key>C_AXI_ARUSER_WIDTH</key>
		<label>ARUSER Signal Width</label>
		<tip>Used to override tool-generated value.</tip>
	</widget>
	'>
	<!ENTITY C_AXI_WUSER_WIDTH '
	<widget id="C_AXI_WUSER_WIDTH">
		<key>C_AXI_WUSER_WIDTH</key>
		<label>WUSER Signal Width </label>
		<tip>Used to override tool-generated value.</tip>
	</widget>
	'>
	<!ENTITY C_AXI_RUSER_WIDTH '
	<widget id="C_AXI_RUSER_WIDTH">
		<key>C_AXI_RUSER_WIDTH</key>
		<label>RUSER Signal Width</label>
		<tip>Used to override tool-generated value.</tip>
	</widget>
	'>
	<!ENTITY C_AXI_BUSER_WIDTH '
	<widget id="C_AXI_BUSER_WIDTH">
		<key>C_AXI_BUSER_WIDTH</key>
		<label>BUSER Signal Width</label>
		<tip>Used to override tool-generated value.</tip>
	</widget>
	'>
	<!ENTITY C_AXI_CONNECTIVITY '
	<widget id="C_AXI_CONNECTIVITY">
		<key>C_AXI_CONNECTIVITY</key>
		<label>AXI Connectivity</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_SINGLE_THREAD '
	<widget id="C_S_AXI_SINGLE_THREAD">
		<key>C_S_AXI_SINGLE_THREAD</key>
		<label>Slave AXI Single Thread</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_SUPPORTS_REORDERING '
	<widget id="C_M_AXI_SUPPORTS_REORDERING">
		<key>C_M_AXI_SUPPORTS_REORDERING</key>
		<label>Master AXI Supports Reordering</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_WRITE_ACCEPTANCE '
	<widget id="C_S_AXI_WRITE_ACCEPTANCE">
		<key>C_S_AXI_WRITE_ACCEPTANCE</key>
		<label>Slave AXI Write Acceptance</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_READ_ACCEPTANCE '
	<widget id="C_S_AXI_READ_ACCEPTANCE">
		<key>C_S_AXI_READ_ACCEPTANCE</key>
		<label>Slave AXI Read Acceptance</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_WRITE_ISSUING '
	<widget id="C_M_AXI_WRITE_ISSUING">
		<key>C_M_AXI_WRITE_ISSUING</key>
		<label>Master AXI Write Issuing</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_READ_ISSUING '
	<widget id="C_M_AXI_READ_ISSUING">
		<key>C_M_AXI_READ_ISSUING</key>
		<label>Master AXI Read Issuing</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_ARB_PRIORITY '
	<widget id="C_S_AXI_ARB_PRIORITY">
		<key>C_S_AXI_ARB_PRIORITY</key>
		<label>Slave AXI ARB Priority</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_SECURE '
	<widget id="C_M_AXI_SECURE">
		<key>C_M_AXI_SECURE</key>
		<label>Master AXI Secure</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_WRITE_FIFO_DEPTH '
	<widget id="C_S_AXI_WRITE_FIFO_DEPTH">
		<key>C_S_AXI_WRITE_FIFO_DEPTH</key>
		<label>Master AXI Write FIFO Depth</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_WRITE_FIFO_TYPE '
	<widget id="C_S_AXI_WRITE_FIFO_TYPE">
		<key>C_S_AXI_WRITE_FIFO_TYPE</key>
		<label>Slave AXI Write FIFO Type</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_WRITE_FIFO_DELAY '
	<widget id="C_S_AXI_WRITE_FIFO_DELAY">
		<key>C_S_AXI_WRITE_FIFO_DELAY</key>
		<label>Slave AXI Write FIFO Delay</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_READ_FIFO_DEPTH '
	<widget id="C_S_AXI_READ_FIFO_DEPTH">
		<key>C_S_AXI_READ_FIFO_DEPTH</key>
		<label>Slave AXI Read FIFO Depth</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_READ_FIFO_TYPE '
	<widget id="C_S_AXI_READ_FIFO_TYPE">
		<key>C_S_AXI_READ_FIFO_TYPE</key>
		<label>Slave AXI Read FIFO Type</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_READ_FIFO_DELAY '
	<widget id="C_S_AXI_READ_FIFO_DELAY">
		<key>C_S_AXI_READ_FIFO_DELAY</key>
		<label>Slave AXI Read FIFO Delay</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_WRITE_FIFO_DEPTH '
	<widget id="C_M_AXI_WRITE_FIFO_DEPTH">
		<key>C_M_AXI_WRITE_FIFO_DEPTH</key>
		<label>Master AXI Write FIFO Depth</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_WRITE_FIFO_TYPE '
	<widget id="C_M_AXI_WRITE_FIFO_TYPE">
		<key>C_M_AXI_WRITE_FIFO_TYPE</key>
		<label>Master AXI Write FIFO Type</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_WRITE_FIFO_DELAY '
	<widget id="C_M_AXI_WRITE_FIFO_DELAY">
		<key>C_M_AXI_WRITE_FIFO_DELAY</key>
		<label>Master AXI Write FIFO Delay</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_READ_FIFO_DEPTH '
	<widget id="C_M_AXI_READ_FIFO_DEPTH">
		<key>C_M_AXI_READ_FIFO_DEPTH</key>
		<label>Master AXI Read FIFO Depth</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_READ_FIFO_TYPE '
	<widget id="C_M_AXI_READ_FIFO_TYPE">
		<key>C_M_AXI_READ_FIFO_TYPE</key>
		<label>Master AXI Read FIFO Type</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_READ_FIFO_DELAY '
	<widget id="C_M_AXI_READ_FIFO_DELAY">
		<key>C_M_AXI_READ_FIFO_DELAY</key>
		<label>Master AXI Read FIFO Delay</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_AW_REGISTER '
	<widget id="C_S_AXI_AW_REGISTER">
		<key>C_S_AXI_AW_REGISTER</key>
		<label>Slave AXI AW Register</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_AR_REGISTER '
	<widget id="C_S_AXI_AR_REGISTER">
		<key>C_S_AXI_AR_REGISTER</key>
		<label>Slave AXI AR Register</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_W_REGISTER '
	<widget id="C_S_AXI_W_REGISTER">
		<key>C_S_AXI_W_REGISTER</key>
		<label>Slave AXI W Register </label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_R_REGISTER '
	<widget id="C_S_AXI_R_REGISTER">
		<key>C_S_AXI_R_REGISTER</key>
		<label>Slave AXI R Register</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_B_REGISTER '
	<widget id="C_S_AXI_B_REGISTER">
		<key>C_S_AXI_B_REGISTER</key>
		<label>Slave AXI B Register</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_AW_REGISTER '
	<widget id="C_M_AXI_AW_REGISTER">
		<key>C_M_AXI_AW_REGISTER</key>
		<label>Master AXI AW Register</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_AR_REGISTER '
	<widget id="C_M_AXI_AR_REGISTER">
		<key>C_M_AXI_AR_REGISTER</key>
		<label>Master AXI AR Register</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_W_REGISTER '
	<widget id="C_M_AXI_W_REGISTER">
		<key>C_M_AXI_W_REGISTER</key>
		<label>Master AXI W Register</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_R_REGISTER '
	<widget id="C_M_AXI_R_REGISTER">
		<key>C_M_AXI_R_REGISTER</key>
		<label>Master AXI R Register</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_B_REGISTER '
	<widget id="C_M_AXI_B_REGISTER">
		<key>C_M_AXI_B_REGISTER</key>
		<label>Master AXI B Register</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_INTERCONNECT_CONNECTIVITY_MODE '
	<widget id="C_INTERCONNECT_CONNECTIVITY_MODE">
		<key>C_INTERCONNECT_CONNECTIVITY_MODE</key>
		<label>Multi-path Connectivity in Crossbar</label>
		<tip>Selects which crossbar pathways have parallel vs. shared connectivity.</tip>
	</widget>
	'>
	<!ENTITY C_USE_CTRL_PORT '
	<widget id="C_USE_CTRL_PORT">
		<key>C_USE_CTRL_PORT</key>
		<label>Use Diagnostic Slave Port</label>
		<tip>Enables implementation of S_AXI_CTRL interface.</tip>
	</widget>
	'>
	<!ENTITY C_USE_INTERRUPT '
	<widget id="C_USE_INTERRUPT">
		<key>C_USE_INTERRUPT</key>
		<label>Generate Interrupts</label>
		<tip>Applicable only when Diagnostic Slave Port is enabled</tip>
	</widget>
	'>
	<!ENTITY C_RANGE_CHECK '
	<widget id="C_RANGE_CHECK">
		<key>C_RANGE_CHECK</key>
		<label>Address Range Check Always</label>
		<tip>Forces address range checking when only one slave IP is connected.</tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_CTRL_PROTOCOL '
	<widget id="C_S_AXI_CTRL_PROTOCOL">
		<key>C_S_AXI_CTRL_PROTOCOL</key>
		<label>Slave AXI CTRL Protocol</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_CTRL_ADDR_WIDTH '
	<widget id="C_S_AXI_CTRL_ADDR_WIDTH">
		<key>C_S_AXI_CTRL_ADDR_WIDTH</key>
		<label>Slave AXI CTRL Address Width</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_CTRL_DATA_WIDTH '
	<widget id="C_S_AXI_CTRL_DATA_WIDTH">
		<key>C_S_AXI_CTRL_DATA_WIDTH</key>
		<label>Slave AXI CTRL Data Width</label>
		<tip></tip>
	</widget>
	'>
	<!ENTITY C_BASEADDR '
	<widget id="C_BASEADDR">
		<key>C_BASEADDR</key>
		<label>Diagnostic Slave Port Base Address</label>
		<tip>Applicable only when Diagnostic Slave Port is enabled</tip>
	</widget>
	'>
	<!ENTITY C_HIGHADDR '
	<widget id="C_HIGHADDR">
		<key>C_HIGHADDR</key>
		<label>Diagnostic Slave Port High Address</label>
		<tip>Applicable only when Diagnostic Slave Port is enabled</tip>
	</widget>
	'>
	<!ENTITY C_DEBUG '
	<widget id="C_DEBUG">
		<key>C_DEBUG</key>
		<label>Simulation debug</label>
		<tip>d</tip>
	</widget>
	'>
	<!ENTITY C_DECODER_PIPELINED_NUM_S '
	<widget id="C_DECODER_PIPELINED_NUM_S">
		<key>C_DECODER_PIPELINED_NUM_S</key>
		<label>Addr pipeline SI-slot threshold</label>
		<tip>d</tip>
	</widget>
	'>
	<!ENTITY C_DECODER_PIPELINED_NUM_M '
	<widget id="C_DECODER_PIPELINED_NUM_M">
		<key>C_DECODER_PIPELINED_NUM_M</key>
		<label>Addr pipeline MI-slot threshold</label>
		<tip>d</tip>
	</widget>
	'>
	<!ENTITY C_S_AXI_SUPPORTS_NARROW_BURST '
	<widget id="C_S_AXI_SUPPORTS_NARROW_BURST">
		<key>C_S_AXI_SUPPORTS_NARROW_BURST</key>
		<label>Master generates narrow bursts</label>
		<tip>d</tip>
	</widget>
	'>
	<!ENTITY C_M_AXI_SUPPORTS_NARROW_BURST '
	<widget id="C_M_AXI_SUPPORTS_NARROW_BURST">
		<key>C_M_AXI_SUPPORTS_NARROW_BURST</key>
		<label>Slave accepts narrow bursts</label>
		<tip>d</tip>
	</widget>
	'>
]>

<doc>
	<view id="User">
		<display>User</display>
		<group id="global">
			<display>Global</display>
			<item>&C_INTERCONNECT_ACLK_RATIO;</item>
			<item>&C_INTERCONNECT_DATA_WIDTH;</item>
			<item>&C_AXI_SUPPORTS_USER_SIGNALS;</item>
			<item>&C_AXI_ARUSER_WIDTH;</item>
			<item>&C_AXI_AWUSER_WIDTH;</item>
			<item>&C_AXI_BUSER_WIDTH;</item>
			<item>&C_AXI_RUSER_WIDTH;</item>
			<item>&C_AXI_WUSER_WIDTH;</item>			
			<item>&C_RANGE_CHECK;</item>
		</group>
		<group id="Control">
			<display>Control Interface</display>
			<item>&C_USE_CTRL_PORT;</item>
			<item>&C_BASEADDR;</item>
			<item>&C_HIGHADDR;</item>
		</group>
		<group id="Hidden">
			<display>Hidden</display>
			<item>&C_FAMILY;</item>
			<item>&C_INTERCONNECT_CONNECTIVITY_MODE;</item>
			<item>&C_USE_INTERRUPT;</item>
			<item>&C_NUM_MASTER_SLOTS;</item>
			<item>&C_NUM_SLAVE_SLOTS;</item>
			<item>&C_AXI_ADDR_WIDTH;</item>
			<item>&C_AXI_DATA_MAX_WIDTH;</item>
			<item>&C_AXI_ID_WIDTH;</item>
			<item>&C_AXI_CONNECTIVITY;</item>
			<item>&C_M_AXI_ACLK_RATIO;</item>
			<item>&C_M_AXI_AR_REGISTER;</item>
			<item>&C_M_AXI_AW_REGISTER;</item>
			<item>&C_M_AXI_B_REGISTER;</item>
			<item>&C_M_AXI_BASE_ADDR;</item>
			<item>&C_M_AXI_DATA_WIDTH;</item>
			<item>&C_M_AXI_HIGH_ADDR;</item>
			<item>&C_M_AXI_IS_ACLK_ASYNC;</item>
			<item>&C_M_AXI_PROTOCOL;</item>
			<item>&C_M_AXI_R_REGISTER;</item>
			<item>&C_M_AXI_READ_FIFO_DELAY;</item>
			<item>&C_M_AXI_READ_FIFO_DEPTH;</item>
			<item>&C_M_AXI_READ_FIFO_TYPE;</item>
			<item>&C_M_AXI_READ_ISSUING;</item>
			<item>&C_M_AXI_SECURE;</item>
			<item>&C_M_AXI_SUPPORTS_READ;</item>
			<item>&C_M_AXI_SUPPORTS_REORDERING;</item>
			<item>&C_M_AXI_SUPPORTS_WRITE;</item>
			<item>&C_M_AXI_W_REGISTER;</item>
			<item>&C_M_AXI_WRITE_FIFO_DELAY;</item>
			<item>&C_M_AXI_WRITE_FIFO_DEPTH;</item>
			<item>&C_M_AXI_WRITE_FIFO_TYPE;</item>
			<item>&C_M_AXI_WRITE_ISSUING;</item>			
			<item>&C_S_AXI_ACLK_RATIO;</item>
			<item>&C_S_AXI_AR_REGISTER;</item>
			<item>&C_S_AXI_ARB_PRIORITY;</item>
			<item>&C_S_AXI_AW_REGISTER;</item>
			<item>&C_S_AXI_B_REGISTER;</item>
			<item>&C_S_AXI_BASE_ID;</item>
			<item>&C_S_AXI_CTRL_ADDR_WIDTH;</item>
			<item>&C_S_AXI_CTRL_DATA_WIDTH;</item>
			<item>&C_S_AXI_CTRL_PROTOCOL;</item>
			<item>&C_S_AXI_DATA_WIDTH;</item>
			<item>&C_S_AXI_IS_ACLK_ASYNC;</item>
			<item>&C_S_AXI_IS_INTERCONNECT;</item>
			<item>&C_S_AXI_PROTOCOL;</item>
			<item>&C_S_AXI_R_REGISTER;</item>
			<item>&C_S_AXI_READ_ACCEPTANCE;</item>
			<item>&C_S_AXI_READ_FIFO_DELAY;</item>
			<item>&C_S_AXI_READ_FIFO_DEPTH;</item>
			<item>&C_S_AXI_READ_FIFO_TYPE;</item>
			<item>&C_S_AXI_SINGLE_THREAD;</item>
			<item>&C_S_AXI_SUPPORTS_READ;</item>
			<item>&C_S_AXI_SUPPORTS_WRITE;</item>
			<item>&C_S_AXI_THREAD_ID_WIDTH;</item>
			<item>&C_S_AXI_W_REGISTER;</item>
			<item>&C_S_AXI_WRITE_ACCEPTANCE;</item>
			<item>&C_S_AXI_WRITE_FIFO_DELAY;</item>
			<item>&C_S_AXI_WRITE_FIFO_DEPTH;</item>
			<item>&C_S_AXI_WRITE_FIFO_TYPE;</item>			
			<item>&C_DEBUG;</item>			
			<item>&C_DECODER_PIPELINED_NUM_S;</item>			
			<item>&C_DECODER_PIPELINED_NUM_M;</item>			
			<item>&C_S_AXI_SUPPORTS_NARROW_BURST;</item>			
			<item>&C_M_AXI_SUPPORTS_NARROW_BURST;</item>			
		</group>
	</view>	
</doc>
		
